/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 269.0, "minX": 0.0, "maxY": 3153.0, "series": [{"data": [[0.0, 389.0], [0.1, 389.0], [0.2, 393.0], [0.3, 394.0], [0.4, 394.0], [0.5, 394.0], [0.6, 394.0], [0.7, 396.0], [0.8, 398.0], [0.9, 400.0], [1.0, 400.0], [1.1, 400.0], [1.2, 401.0], [1.3, 402.0], [1.4, 403.0], [1.5, 404.0], [1.6, 404.0], [1.7, 404.0], [1.8, 404.0], [1.9, 404.0], [2.0, 404.0], [2.1, 404.0], [2.2, 405.0], [2.3, 406.0], [2.4, 407.0], [2.5, 407.0], [2.6, 407.0], [2.7, 407.0], [2.8, 410.0], [2.9, 412.0], [3.0, 412.0], [3.1, 412.0], [3.2, 413.0], [3.3, 414.0], [3.4, 415.0], [3.5, 419.0], [3.6, 419.0], [3.7, 421.0], [3.8, 422.0], [3.9, 424.0], [4.0, 426.0], [4.1, 426.0], [4.2, 426.0], [4.3, 428.0], [4.4, 429.0], [4.5, 430.0], [4.6, 430.0], [4.7, 430.0], [4.8, 436.0], [4.9, 437.0], [5.0, 454.0], [5.1, 454.0], [5.2, 459.0], [5.3, 459.0], [5.4, 459.0], [5.5, 460.0], [5.6, 460.0], [5.7, 462.0], [5.8, 463.0], [5.9, 463.0], [6.0, 467.0], [6.1, 467.0], [6.2, 467.0], [6.3, 468.0], [6.4, 468.0], [6.5, 468.0], [6.6, 468.0], [6.7, 472.0], [6.8, 474.0], [6.9, 475.0], [7.0, 475.0], [7.1, 475.0], [7.2, 476.0], [7.3, 478.0], [7.4, 478.0], [7.5, 478.0], [7.6, 478.0], [7.7, 479.0], [7.8, 479.0], [7.9, 480.0], [8.0, 480.0], [8.1, 480.0], [8.2, 480.0], [8.3, 480.0], [8.4, 481.0], [8.5, 481.0], [8.6, 481.0], [8.7, 481.0], [8.8, 481.0], [8.9, 482.0], [9.0, 482.0], [9.1, 482.0], [9.2, 483.0], [9.3, 483.0], [9.4, 483.0], [9.5, 484.0], [9.6, 484.0], [9.7, 484.0], [9.8, 484.0], [9.9, 484.0], [10.0, 484.0], [10.1, 484.0], [10.2, 485.0], [10.3, 485.0], [10.4, 485.0], [10.5, 485.0], [10.6, 485.0], [10.7, 485.0], [10.8, 486.0], [10.9, 486.0], [11.0, 486.0], [11.1, 486.0], [11.2, 487.0], [11.3, 487.0], [11.4, 487.0], [11.5, 487.0], [11.6, 487.0], [11.7, 488.0], [11.8, 488.0], [11.9, 488.0], [12.0, 489.0], [12.1, 489.0], [12.2, 489.0], [12.3, 489.0], [12.4, 490.0], [12.5, 490.0], [12.6, 490.0], [12.7, 490.0], [12.8, 490.0], [12.9, 490.0], [13.0, 491.0], [13.1, 491.0], [13.2, 491.0], [13.3, 491.0], [13.4, 491.0], [13.5, 491.0], [13.6, 491.0], [13.7, 492.0], [13.8, 492.0], [13.9, 492.0], [14.0, 492.0], [14.1, 492.0], [14.2, 492.0], [14.3, 492.0], [14.4, 492.0], [14.5, 492.0], [14.6, 492.0], [14.7, 493.0], [14.8, 493.0], [14.9, 493.0], [15.0, 493.0], [15.1, 493.0], [15.2, 493.0], [15.3, 493.0], [15.4, 493.0], [15.5, 493.0], [15.6, 493.0], [15.7, 493.0], [15.8, 494.0], [15.9, 494.0], [16.0, 494.0], [16.1, 494.0], [16.2, 494.0], [16.3, 494.0], [16.4, 494.0], [16.5, 494.0], [16.6, 494.0], [16.7, 494.0], [16.8, 495.0], [16.9, 495.0], [17.0, 495.0], [17.1, 495.0], [17.2, 495.0], [17.3, 495.0], [17.4, 496.0], [17.5, 496.0], [17.6, 496.0], [17.7, 496.0], [17.8, 496.0], [17.9, 496.0], [18.0, 496.0], [18.1, 496.0], [18.2, 496.0], [18.3, 496.0], [18.4, 496.0], [18.5, 497.0], [18.6, 497.0], [18.7, 497.0], [18.8, 497.0], [18.9, 497.0], [19.0, 497.0], [19.1, 497.0], [19.2, 497.0], [19.3, 498.0], [19.4, 498.0], [19.5, 498.0], [19.6, 498.0], [19.7, 499.0], [19.8, 499.0], [19.9, 499.0], [20.0, 499.0], [20.1, 499.0], [20.2, 499.0], [20.3, 499.0], [20.4, 499.0], [20.5, 499.0], [20.6, 499.0], [20.7, 499.0], [20.8, 500.0], [20.9, 500.0], [21.0, 500.0], [21.1, 500.0], [21.2, 500.0], [21.3, 500.0], [21.4, 500.0], [21.5, 500.0], [21.6, 500.0], [21.7, 501.0], [21.8, 501.0], [21.9, 501.0], [22.0, 501.0], [22.1, 501.0], [22.2, 501.0], [22.3, 501.0], [22.4, 501.0], [22.5, 501.0], [22.6, 501.0], [22.7, 501.0], [22.8, 501.0], [22.9, 501.0], [23.0, 501.0], [23.1, 501.0], [23.2, 501.0], [23.3, 501.0], [23.4, 501.0], [23.5, 502.0], [23.6, 502.0], [23.7, 502.0], [23.8, 502.0], [23.9, 502.0], [24.0, 502.0], [24.1, 502.0], [24.2, 503.0], [24.3, 503.0], [24.4, 503.0], [24.5, 503.0], [24.6, 503.0], [24.7, 503.0], [24.8, 503.0], [24.9, 504.0], [25.0, 504.0], [25.1, 504.0], [25.2, 504.0], [25.3, 504.0], [25.4, 505.0], [25.5, 505.0], [25.6, 505.0], [25.7, 505.0], [25.8, 505.0], [25.9, 505.0], [26.0, 505.0], [26.1, 505.0], [26.2, 505.0], [26.3, 505.0], [26.4, 505.0], [26.5, 505.0], [26.6, 505.0], [26.7, 506.0], [26.8, 506.0], [26.9, 506.0], [27.0, 506.0], [27.1, 506.0], [27.2, 506.0], [27.3, 506.0], [27.4, 507.0], [27.5, 507.0], [27.6, 507.0], [27.7, 507.0], [27.8, 507.0], [27.9, 507.0], [28.0, 507.0], [28.1, 507.0], [28.2, 507.0], [28.3, 507.0], [28.4, 507.0], [28.5, 508.0], [28.6, 508.0], [28.7, 508.0], [28.8, 508.0], [28.9, 508.0], [29.0, 508.0], [29.1, 508.0], [29.2, 508.0], [29.3, 508.0], [29.4, 508.0], [29.5, 508.0], [29.6, 508.0], [29.7, 508.0], [29.8, 508.0], [29.9, 508.0], [30.0, 508.0], [30.1, 508.0], [30.2, 508.0], [30.3, 508.0], [30.4, 508.0], [30.5, 508.0], [30.6, 508.0], [30.7, 509.0], [30.8, 509.0], [30.9, 509.0], [31.0, 509.0], [31.1, 509.0], [31.2, 509.0], [31.3, 509.0], [31.4, 509.0], [31.5, 509.0], [31.6, 509.0], [31.7, 509.0], [31.8, 509.0], [31.9, 509.0], [32.0, 509.0], [32.1, 509.0], [32.2, 509.0], [32.3, 509.0], [32.4, 509.0], [32.5, 510.0], [32.6, 510.0], [32.7, 510.0], [32.8, 510.0], [32.9, 510.0], [33.0, 510.0], [33.1, 510.0], [33.2, 510.0], [33.3, 510.0], [33.4, 510.0], [33.5, 510.0], [33.6, 510.0], [33.7, 510.0], [33.8, 511.0], [33.9, 511.0], [34.0, 511.0], [34.1, 511.0], [34.2, 511.0], [34.3, 511.0], [34.4, 511.0], [34.5, 511.0], [34.6, 511.0], [34.7, 511.0], [34.8, 511.0], [34.9, 511.0], [35.0, 511.0], [35.1, 511.0], [35.2, 512.0], [35.3, 512.0], [35.4, 512.0], [35.5, 512.0], [35.6, 512.0], [35.7, 512.0], [35.8, 512.0], [35.9, 512.0], [36.0, 512.0], [36.1, 512.0], [36.2, 512.0], [36.3, 512.0], [36.4, 512.0], [36.5, 512.0], [36.6, 512.0], [36.7, 512.0], [36.8, 512.0], [36.9, 512.0], [37.0, 513.0], [37.1, 513.0], [37.2, 513.0], [37.3, 513.0], [37.4, 513.0], [37.5, 513.0], [37.6, 513.0], [37.7, 513.0], [37.8, 513.0], [37.9, 513.0], [38.0, 513.0], [38.1, 513.0], [38.2, 513.0], [38.3, 513.0], [38.4, 513.0], [38.5, 513.0], [38.6, 513.0], [38.7, 513.0], [38.8, 513.0], [38.9, 514.0], [39.0, 514.0], [39.1, 514.0], [39.2, 514.0], [39.3, 514.0], [39.4, 514.0], [39.5, 514.0], [39.6, 514.0], [39.7, 514.0], [39.8, 514.0], [39.9, 514.0], [40.0, 514.0], [40.1, 514.0], [40.2, 514.0], [40.3, 514.0], [40.4, 514.0], [40.5, 514.0], [40.6, 514.0], [40.7, 514.0], [40.8, 514.0], [40.9, 514.0], [41.0, 515.0], [41.1, 515.0], [41.2, 515.0], [41.3, 515.0], [41.4, 515.0], [41.5, 515.0], [41.6, 515.0], [41.7, 515.0], [41.8, 515.0], [41.9, 515.0], [42.0, 515.0], [42.1, 515.0], [42.2, 515.0], [42.3, 515.0], [42.4, 516.0], [42.5, 516.0], [42.6, 516.0], [42.7, 516.0], [42.8, 516.0], [42.9, 516.0], [43.0, 516.0], [43.1, 516.0], [43.2, 516.0], [43.3, 516.0], [43.4, 516.0], [43.5, 516.0], [43.6, 516.0], [43.7, 516.0], [43.8, 516.0], [43.9, 516.0], [44.0, 516.0], [44.1, 516.0], [44.2, 516.0], [44.3, 516.0], [44.4, 516.0], [44.5, 516.0], [44.6, 516.0], [44.7, 517.0], [44.8, 517.0], [44.9, 517.0], [45.0, 517.0], [45.1, 517.0], [45.2, 517.0], [45.3, 517.0], [45.4, 517.0], [45.5, 517.0], [45.6, 517.0], [45.7, 517.0], [45.8, 517.0], [45.9, 517.0], [46.0, 517.0], [46.1, 517.0], [46.2, 517.0], [46.3, 518.0], [46.4, 518.0], [46.5, 518.0], [46.6, 518.0], [46.7, 518.0], [46.8, 518.0], [46.9, 518.0], [47.0, 518.0], [47.1, 518.0], [47.2, 518.0], [47.3, 518.0], [47.4, 518.0], [47.5, 518.0], [47.6, 518.0], [47.7, 518.0], [47.8, 518.0], [47.9, 518.0], [48.0, 519.0], [48.1, 519.0], [48.2, 519.0], [48.3, 519.0], [48.4, 519.0], [48.5, 519.0], [48.6, 519.0], [48.7, 519.0], [48.8, 519.0], [48.9, 519.0], [49.0, 519.0], [49.1, 519.0], [49.2, 519.0], [49.3, 519.0], [49.4, 519.0], [49.5, 519.0], [49.6, 519.0], [49.7, 520.0], [49.8, 520.0], [49.9, 520.0], [50.0, 520.0], [50.1, 520.0], [50.2, 520.0], [50.3, 520.0], [50.4, 520.0], [50.5, 520.0], [50.6, 520.0], [50.7, 520.0], [50.8, 520.0], [50.9, 520.0], [51.0, 520.0], [51.1, 520.0], [51.2, 520.0], [51.3, 520.0], [51.4, 520.0], [51.5, 520.0], [51.6, 520.0], [51.7, 520.0], [51.8, 520.0], [51.9, 520.0], [52.0, 521.0], [52.1, 521.0], [52.2, 521.0], [52.3, 521.0], [52.4, 521.0], [52.5, 521.0], [52.6, 521.0], [52.7, 521.0], [52.8, 521.0], [52.9, 521.0], [53.0, 521.0], [53.1, 521.0], [53.2, 521.0], [53.3, 521.0], [53.4, 521.0], [53.5, 521.0], [53.6, 521.0], [53.7, 521.0], [53.8, 522.0], [53.9, 522.0], [54.0, 522.0], [54.1, 522.0], [54.2, 522.0], [54.3, 522.0], [54.4, 522.0], [54.5, 522.0], [54.6, 522.0], [54.7, 522.0], [54.8, 522.0], [54.9, 522.0], [55.0, 522.0], [55.1, 522.0], [55.2, 522.0], [55.3, 522.0], [55.4, 522.0], [55.5, 522.0], [55.6, 522.0], [55.7, 522.0], [55.8, 522.0], [55.9, 522.0], [56.0, 523.0], [56.1, 523.0], [56.2, 523.0], [56.3, 523.0], [56.4, 523.0], [56.5, 523.0], [56.6, 523.0], [56.7, 523.0], [56.8, 523.0], [56.9, 523.0], [57.0, 523.0], [57.1, 523.0], [57.2, 523.0], [57.3, 523.0], [57.4, 523.0], [57.5, 523.0], [57.6, 523.0], [57.7, 523.0], [57.8, 523.0], [57.9, 523.0], [58.0, 523.0], [58.1, 523.0], [58.2, 523.0], [58.3, 524.0], [58.4, 524.0], [58.5, 524.0], [58.6, 524.0], [58.7, 524.0], [58.8, 524.0], [58.9, 524.0], [59.0, 524.0], [59.1, 524.0], [59.2, 524.0], [59.3, 524.0], [59.4, 524.0], [59.5, 524.0], [59.6, 524.0], [59.7, 524.0], [59.8, 524.0], [59.9, 524.0], [60.0, 524.0], [60.1, 524.0], [60.2, 524.0], [60.3, 524.0], [60.4, 525.0], [60.5, 525.0], [60.6, 525.0], [60.7, 525.0], [60.8, 525.0], [60.9, 525.0], [61.0, 525.0], [61.1, 525.0], [61.2, 525.0], [61.3, 525.0], [61.4, 525.0], [61.5, 525.0], [61.6, 525.0], [61.7, 525.0], [61.8, 526.0], [61.9, 526.0], [62.0, 526.0], [62.1, 526.0], [62.2, 526.0], [62.3, 526.0], [62.4, 526.0], [62.5, 526.0], [62.6, 526.0], [62.7, 526.0], [62.8, 526.0], [62.9, 526.0], [63.0, 526.0], [63.1, 526.0], [63.2, 526.0], [63.3, 526.0], [63.4, 526.0], [63.5, 526.0], [63.6, 526.0], [63.7, 527.0], [63.8, 527.0], [63.9, 527.0], [64.0, 527.0], [64.1, 527.0], [64.2, 527.0], [64.3, 527.0], [64.4, 527.0], [64.5, 527.0], [64.6, 527.0], [64.7, 527.0], [64.8, 528.0], [64.9, 528.0], [65.0, 528.0], [65.1, 528.0], [65.2, 528.0], [65.3, 528.0], [65.4, 528.0], [65.5, 528.0], [65.6, 528.0], [65.7, 528.0], [65.8, 528.0], [65.9, 528.0], [66.0, 528.0], [66.1, 528.0], [66.2, 528.0], [66.3, 528.0], [66.4, 528.0], [66.5, 528.0], [66.6, 528.0], [66.7, 528.0], [66.8, 528.0], [66.9, 528.0], [67.0, 529.0], [67.1, 529.0], [67.2, 529.0], [67.3, 529.0], [67.4, 529.0], [67.5, 529.0], [67.6, 529.0], [67.7, 529.0], [67.8, 530.0], [67.9, 530.0], [68.0, 530.0], [68.1, 530.0], [68.2, 530.0], [68.3, 530.0], [68.4, 530.0], [68.5, 530.0], [68.6, 530.0], [68.7, 530.0], [68.8, 531.0], [68.9, 531.0], [69.0, 531.0], [69.1, 531.0], [69.2, 531.0], [69.3, 531.0], [69.4, 531.0], [69.5, 531.0], [69.6, 531.0], [69.7, 531.0], [69.8, 531.0], [69.9, 531.0], [70.0, 531.0], [70.1, 531.0], [70.2, 531.0], [70.3, 531.0], [70.4, 531.0], [70.5, 532.0], [70.6, 532.0], [70.7, 532.0], [70.8, 532.0], [70.9, 532.0], [71.0, 532.0], [71.1, 532.0], [71.2, 532.0], [71.3, 532.0], [71.4, 532.0], [71.5, 532.0], [71.6, 532.0], [71.7, 532.0], [71.8, 532.0], [71.9, 532.0], [72.0, 532.0], [72.1, 532.0], [72.2, 532.0], [72.3, 532.0], [72.4, 533.0], [72.5, 533.0], [72.6, 533.0], [72.7, 533.0], [72.8, 533.0], [72.9, 533.0], [73.0, 533.0], [73.1, 533.0], [73.2, 533.0], [73.3, 533.0], [73.4, 533.0], [73.5, 533.0], [73.6, 533.0], [73.7, 533.0], [73.8, 533.0], [73.9, 533.0], [74.0, 533.0], [74.1, 533.0], [74.2, 533.0], [74.3, 533.0], [74.4, 534.0], [74.5, 534.0], [74.6, 534.0], [74.7, 534.0], [74.8, 534.0], [74.9, 534.0], [75.0, 534.0], [75.1, 534.0], [75.2, 534.0], [75.3, 534.0], [75.4, 534.0], [75.5, 534.0], [75.6, 534.0], [75.7, 534.0], [75.8, 534.0], [75.9, 535.0], [76.0, 535.0], [76.1, 535.0], [76.2, 535.0], [76.3, 535.0], [76.4, 535.0], [76.5, 535.0], [76.6, 535.0], [76.7, 535.0], [76.8, 535.0], [76.9, 535.0], [77.0, 535.0], [77.1, 535.0], [77.2, 535.0], [77.3, 535.0], [77.4, 536.0], [77.5, 536.0], [77.6, 536.0], [77.7, 536.0], [77.8, 536.0], [77.9, 536.0], [78.0, 537.0], [78.1, 537.0], [78.2, 537.0], [78.3, 537.0], [78.4, 537.0], [78.5, 538.0], [78.6, 538.0], [78.7, 538.0], [78.8, 538.0], [78.9, 538.0], [79.0, 538.0], [79.1, 538.0], [79.2, 538.0], [79.3, 538.0], [79.4, 538.0], [79.5, 538.0], [79.6, 538.0], [79.7, 538.0], [79.8, 538.0], [79.9, 538.0], [80.0, 539.0], [80.1, 539.0], [80.2, 539.0], [80.3, 539.0], [80.4, 539.0], [80.5, 539.0], [80.6, 539.0], [80.7, 539.0], [80.8, 539.0], [80.9, 540.0], [81.0, 540.0], [81.1, 540.0], [81.2, 540.0], [81.3, 540.0], [81.4, 540.0], [81.5, 540.0], [81.6, 540.0], [81.7, 540.0], [81.8, 540.0], [81.9, 540.0], [82.0, 541.0], [82.1, 541.0], [82.2, 541.0], [82.3, 541.0], [82.4, 541.0], [82.5, 541.0], [82.6, 541.0], [82.7, 541.0], [82.8, 541.0], [82.9, 541.0], [83.0, 541.0], [83.1, 541.0], [83.2, 541.0], [83.3, 541.0], [83.4, 541.0], [83.5, 541.0], [83.6, 541.0], [83.7, 542.0], [83.8, 542.0], [83.9, 542.0], [84.0, 542.0], [84.1, 542.0], [84.2, 542.0], [84.3, 543.0], [84.4, 543.0], [84.5, 543.0], [84.6, 543.0], [84.7, 543.0], [84.8, 543.0], [84.9, 543.0], [85.0, 543.0], [85.1, 543.0], [85.2, 543.0], [85.3, 543.0], [85.4, 543.0], [85.5, 544.0], [85.6, 544.0], [85.7, 544.0], [85.8, 544.0], [85.9, 544.0], [86.0, 544.0], [86.1, 544.0], [86.2, 545.0], [86.3, 545.0], [86.4, 545.0], [86.5, 545.0], [86.6, 545.0], [86.7, 546.0], [86.8, 546.0], [86.9, 546.0], [87.0, 546.0], [87.1, 546.0], [87.2, 547.0], [87.3, 547.0], [87.4, 547.0], [87.5, 547.0], [87.6, 547.0], [87.7, 547.0], [87.8, 548.0], [87.9, 548.0], [88.0, 548.0], [88.1, 548.0], [88.2, 548.0], [88.3, 548.0], [88.4, 549.0], [88.5, 549.0], [88.6, 549.0], [88.7, 549.0], [88.8, 549.0], [88.9, 550.0], [89.0, 550.0], [89.1, 550.0], [89.2, 550.0], [89.3, 551.0], [89.4, 551.0], [89.5, 551.0], [89.6, 551.0], [89.7, 551.0], [89.8, 551.0], [89.9, 551.0], [90.0, 552.0], [90.1, 552.0], [90.2, 552.0], [90.3, 553.0], [90.4, 553.0], [90.5, 553.0], [90.6, 553.0], [90.7, 553.0], [90.8, 553.0], [90.9, 553.0], [91.0, 553.0], [91.1, 553.0], [91.2, 553.0], [91.3, 554.0], [91.4, 554.0], [91.5, 555.0], [91.6, 555.0], [91.7, 555.0], [91.8, 555.0], [91.9, 555.0], [92.0, 556.0], [92.1, 556.0], [92.2, 556.0], [92.3, 558.0], [92.4, 558.0], [92.5, 559.0], [92.6, 559.0], [92.7, 559.0], [92.8, 559.0], [92.9, 560.0], [93.0, 560.0], [93.1, 560.0], [93.2, 560.0], [93.3, 560.0], [93.4, 561.0], [93.5, 563.0], [93.6, 563.0], [93.7, 563.0], [93.8, 563.0], [93.9, 564.0], [94.0, 566.0], [94.1, 566.0], [94.2, 566.0], [94.3, 567.0], [94.4, 568.0], [94.5, 568.0], [94.6, 568.0], [94.7, 568.0], [94.8, 568.0], [94.9, 570.0], [95.0, 570.0], [95.1, 570.0], [95.2, 571.0], [95.3, 571.0], [95.4, 572.0], [95.5, 579.0], [95.6, 579.0], [95.7, 582.0], [95.8, 583.0], [95.9, 585.0], [96.0, 587.0], [96.1, 587.0], [96.2, 587.0], [96.3, 588.0], [96.4, 589.0], [96.5, 590.0], [96.6, 590.0], [96.7, 594.0], [96.8, 595.0], [96.9, 596.0], [97.0, 597.0], [97.1, 597.0], [97.2, 600.0], [97.3, 604.0], [97.4, 605.0], [97.5, 605.0], [97.6, 605.0], [97.7, 605.0], [97.8, 609.0], [97.9, 611.0], [98.0, 611.0], [98.1, 611.0], [98.2, 613.0], [98.3, 613.0], [98.4, 614.0], [98.5, 626.0], [98.6, 626.0], [98.7, 636.0], [98.8, 642.0], [98.9, 646.0], [99.0, 651.0], [99.1, 651.0], [99.2, 653.0], [99.3, 705.0], [99.4, 789.0], [99.5, 1162.0], [99.6, 1162.0], [99.7, 1958.0], [99.8, 2086.0], [99.9, 2088.0]], "isOverall": false, "label": "https://blazedemo.com/", "isController": false}, {"data": [[0.0, 272.0], [0.1, 272.0], [0.2, 278.0], [0.3, 280.0], [0.4, 283.0], [0.5, 284.0], [0.6, 284.0], [0.7, 284.0], [0.8, 284.0], [0.9, 284.0], [1.0, 284.0], [1.1, 284.0], [1.2, 285.0], [1.3, 285.0], [1.4, 285.0], [1.5, 285.0], [1.6, 285.0], [1.7, 285.0], [1.8, 286.0], [1.9, 287.0], [2.0, 287.0], [2.1, 287.0], [2.2, 289.0], [2.3, 290.0], [2.4, 291.0], [2.5, 293.0], [2.6, 293.0], [2.7, 294.0], [2.8, 296.0], [2.9, 300.0], [3.0, 300.0], [3.1, 300.0], [3.2, 301.0], [3.3, 303.0], [3.4, 303.0], [3.5, 306.0], [3.6, 306.0], [3.7, 319.0], [3.8, 341.0], [3.9, 350.0], [4.0, 350.0], [4.1, 350.0], [4.2, 355.0], [4.3, 357.0], [4.4, 361.0], [4.5, 362.0], [4.6, 362.0], [4.7, 364.0], [4.8, 364.0], [4.9, 365.0], [5.0, 366.0], [5.1, 366.0], [5.2, 366.0], [5.3, 366.0], [5.4, 368.0], [5.5, 369.0], [5.6, 369.0], [5.7, 370.0], [5.8, 371.0], [5.9, 372.0], [6.0, 372.0], [6.1, 372.0], [6.2, 372.0], [6.3, 374.0], [6.4, 375.0], [6.5, 375.0], [6.6, 375.0], [6.7, 375.0], [6.8, 376.0], [6.9, 378.0], [7.0, 378.0], [7.1, 378.0], [7.2, 379.0], [7.3, 379.0], [7.4, 379.0], [7.5, 379.0], [7.6, 379.0], [7.7, 380.0], [7.8, 380.0], [7.9, 380.0], [8.0, 381.0], [8.1, 381.0], [8.2, 381.0], [8.3, 381.0], [8.4, 381.0], [8.5, 381.0], [8.6, 381.0], [8.7, 381.0], [8.8, 382.0], [8.9, 383.0], [9.0, 383.0], [9.1, 383.0], [9.2, 384.0], [9.3, 384.0], [9.4, 384.0], [9.5, 384.0], [9.6, 384.0], [9.7, 384.0], [9.8, 385.0], [9.9, 385.0], [10.0, 385.0], [10.1, 385.0], [10.2, 385.0], [10.3, 385.0], [10.4, 385.0], [10.5, 385.0], [10.6, 385.0], [10.7, 385.0], [10.8, 385.0], [10.9, 386.0], [11.0, 386.0], [11.1, 386.0], [11.2, 386.0], [11.3, 387.0], [11.4, 387.0], [11.5, 387.0], [11.6, 387.0], [11.7, 387.0], [11.8, 388.0], [11.9, 389.0], [12.0, 389.0], [12.1, 389.0], [12.2, 389.0], [12.3, 389.0], [12.4, 390.0], [12.5, 390.0], [12.6, 390.0], [12.7, 390.0], [12.8, 391.0], [12.9, 391.0], [13.0, 391.0], [13.1, 391.0], [13.2, 391.0], [13.3, 391.0], [13.4, 391.0], [13.5, 391.0], [13.6, 391.0], [13.7, 391.0], [13.8, 391.0], [13.9, 391.0], [14.0, 392.0], [14.1, 392.0], [14.2, 392.0], [14.3, 392.0], [14.4, 392.0], [14.5, 392.0], [14.6, 392.0], [14.7, 392.0], [14.8, 393.0], [14.9, 393.0], [15.0, 393.0], [15.1, 393.0], [15.2, 393.0], [15.3, 393.0], [15.4, 393.0], [15.5, 393.0], [15.6, 393.0], [15.7, 394.0], [15.8, 394.0], [15.9, 394.0], [16.0, 394.0], [16.1, 394.0], [16.2, 394.0], [16.3, 394.0], [16.4, 395.0], [16.5, 395.0], [16.6, 395.0], [16.7, 395.0], [16.8, 395.0], [16.9, 395.0], [17.0, 395.0], [17.1, 395.0], [17.2, 395.0], [17.3, 395.0], [17.4, 396.0], [17.5, 396.0], [17.6, 396.0], [17.7, 396.0], [17.8, 396.0], [17.9, 397.0], [18.0, 397.0], [18.1, 397.0], [18.2, 397.0], [18.3, 397.0], [18.4, 397.0], [18.5, 397.0], [18.6, 397.0], [18.7, 397.0], [18.8, 398.0], [18.9, 398.0], [19.0, 398.0], [19.1, 398.0], [19.2, 398.0], [19.3, 398.0], [19.4, 398.0], [19.5, 398.0], [19.6, 398.0], [19.7, 398.0], [19.8, 398.0], [19.9, 399.0], [20.0, 399.0], [20.1, 399.0], [20.2, 399.0], [20.3, 399.0], [20.4, 399.0], [20.5, 399.0], [20.6, 399.0], [20.7, 399.0], [20.8, 399.0], [20.9, 399.0], [21.0, 399.0], [21.1, 399.0], [21.2, 399.0], [21.3, 399.0], [21.4, 399.0], [21.5, 399.0], [21.6, 399.0], [21.7, 399.0], [21.8, 399.0], [21.9, 399.0], [22.0, 400.0], [22.1, 400.0], [22.2, 400.0], [22.3, 400.0], [22.4, 400.0], [22.5, 400.0], [22.6, 400.0], [22.7, 400.0], [22.8, 400.0], [22.9, 400.0], [23.0, 400.0], [23.1, 400.0], [23.2, 401.0], [23.3, 401.0], [23.4, 401.0], [23.5, 401.0], [23.6, 401.0], [23.7, 401.0], [23.8, 401.0], [23.9, 401.0], [24.0, 402.0], [24.1, 402.0], [24.2, 402.0], [24.3, 402.0], [24.4, 402.0], [24.5, 402.0], [24.6, 402.0], [24.7, 402.0], [24.8, 402.0], [24.9, 402.0], [25.0, 402.0], [25.1, 402.0], [25.2, 402.0], [25.3, 402.0], [25.4, 402.0], [25.5, 402.0], [25.6, 402.0], [25.7, 402.0], [25.8, 402.0], [25.9, 402.0], [26.0, 403.0], [26.1, 403.0], [26.2, 403.0], [26.3, 403.0], [26.4, 403.0], [26.5, 403.0], [26.6, 403.0], [26.7, 403.0], [26.8, 403.0], [26.9, 403.0], [27.0, 403.0], [27.1, 403.0], [27.2, 403.0], [27.3, 403.0], [27.4, 403.0], [27.5, 403.0], [27.6, 403.0], [27.7, 403.0], [27.8, 403.0], [27.9, 403.0], [28.0, 403.0], [28.1, 403.0], [28.2, 404.0], [28.3, 404.0], [28.4, 404.0], [28.5, 404.0], [28.6, 404.0], [28.7, 404.0], [28.8, 404.0], [28.9, 404.0], [29.0, 404.0], [29.1, 404.0], [29.2, 404.0], [29.3, 404.0], [29.4, 404.0], [29.5, 404.0], [29.6, 404.0], [29.7, 404.0], [29.8, 404.0], [29.9, 404.0], [30.0, 404.0], [30.1, 404.0], [30.2, 405.0], [30.3, 405.0], [30.4, 405.0], [30.5, 405.0], [30.6, 405.0], [30.7, 405.0], [30.8, 405.0], [30.9, 405.0], [31.0, 405.0], [31.1, 405.0], [31.2, 405.0], [31.3, 405.0], [31.4, 405.0], [31.5, 405.0], [31.6, 405.0], [31.7, 405.0], [31.8, 405.0], [31.9, 405.0], [32.0, 405.0], [32.1, 405.0], [32.2, 405.0], [32.3, 406.0], [32.4, 406.0], [32.5, 406.0], [32.6, 406.0], [32.7, 406.0], [32.8, 406.0], [32.9, 406.0], [33.0, 406.0], [33.1, 406.0], [33.2, 406.0], [33.3, 406.0], [33.4, 406.0], [33.5, 406.0], [33.6, 406.0], [33.7, 406.0], [33.8, 406.0], [33.9, 406.0], [34.0, 406.0], [34.1, 406.0], [34.2, 406.0], [34.3, 407.0], [34.4, 407.0], [34.5, 407.0], [34.6, 407.0], [34.7, 407.0], [34.8, 407.0], [34.9, 407.0], [35.0, 407.0], [35.1, 407.0], [35.2, 407.0], [35.3, 407.0], [35.4, 407.0], [35.5, 407.0], [35.6, 407.0], [35.7, 407.0], [35.8, 407.0], [35.9, 407.0], [36.0, 407.0], [36.1, 407.0], [36.2, 408.0], [36.3, 408.0], [36.4, 408.0], [36.5, 408.0], [36.6, 408.0], [36.7, 408.0], [36.8, 408.0], [36.9, 408.0], [37.0, 408.0], [37.1, 408.0], [37.2, 408.0], [37.3, 408.0], [37.4, 408.0], [37.5, 408.0], [37.6, 408.0], [37.7, 408.0], [37.8, 408.0], [37.9, 408.0], [38.0, 408.0], [38.1, 408.0], [38.2, 408.0], [38.3, 408.0], [38.4, 408.0], [38.5, 408.0], [38.6, 408.0], [38.7, 408.0], [38.8, 408.0], [38.9, 408.0], [39.0, 409.0], [39.1, 409.0], [39.2, 409.0], [39.3, 409.0], [39.4, 409.0], [39.5, 409.0], [39.6, 409.0], [39.7, 409.0], [39.8, 409.0], [39.9, 409.0], [40.0, 409.0], [40.1, 409.0], [40.2, 409.0], [40.3, 409.0], [40.4, 409.0], [40.5, 409.0], [40.6, 409.0], [40.7, 409.0], [40.8, 409.0], [40.9, 409.0], [41.0, 410.0], [41.1, 410.0], [41.2, 410.0], [41.3, 410.0], [41.4, 410.0], [41.5, 410.0], [41.6, 410.0], [41.7, 410.0], [41.8, 410.0], [41.9, 410.0], [42.0, 410.0], [42.1, 410.0], [42.2, 410.0], [42.3, 410.0], [42.4, 410.0], [42.5, 410.0], [42.6, 410.0], [42.7, 410.0], [42.8, 410.0], [42.9, 410.0], [43.0, 411.0], [43.1, 411.0], [43.2, 411.0], [43.3, 411.0], [43.4, 411.0], [43.5, 411.0], [43.6, 411.0], [43.7, 411.0], [43.8, 411.0], [43.9, 411.0], [44.0, 412.0], [44.1, 412.0], [44.2, 412.0], [44.3, 412.0], [44.4, 412.0], [44.5, 412.0], [44.6, 412.0], [44.7, 412.0], [44.8, 412.0], [44.9, 412.0], [45.0, 412.0], [45.1, 412.0], [45.2, 412.0], [45.3, 412.0], [45.4, 412.0], [45.5, 412.0], [45.6, 412.0], [45.7, 412.0], [45.8, 412.0], [45.9, 412.0], [46.0, 412.0], [46.1, 412.0], [46.2, 412.0], [46.3, 412.0], [46.4, 412.0], [46.5, 412.0], [46.6, 412.0], [46.7, 413.0], [46.8, 413.0], [46.9, 413.0], [47.0, 413.0], [47.1, 413.0], [47.2, 413.0], [47.3, 413.0], [47.4, 413.0], [47.5, 413.0], [47.6, 413.0], [47.7, 413.0], [47.8, 413.0], [47.9, 413.0], [48.0, 413.0], [48.1, 413.0], [48.2, 413.0], [48.3, 413.0], [48.4, 413.0], [48.5, 413.0], [48.6, 413.0], [48.7, 413.0], [48.8, 413.0], [48.9, 413.0], [49.0, 413.0], [49.1, 413.0], [49.2, 414.0], [49.3, 414.0], [49.4, 414.0], [49.5, 414.0], [49.6, 414.0], [49.7, 414.0], [49.8, 414.0], [49.9, 414.0], [50.0, 414.0], [50.1, 414.0], [50.2, 414.0], [50.3, 414.0], [50.4, 414.0], [50.5, 414.0], [50.6, 414.0], [50.7, 414.0], [50.8, 414.0], [50.9, 414.0], [51.0, 414.0], [51.1, 414.0], [51.2, 415.0], [51.3, 415.0], [51.4, 415.0], [51.5, 415.0], [51.6, 415.0], [51.7, 415.0], [51.8, 415.0], [51.9, 415.0], [52.0, 415.0], [52.1, 415.0], [52.2, 415.0], [52.3, 415.0], [52.4, 415.0], [52.5, 415.0], [52.6, 415.0], [52.7, 415.0], [52.8, 415.0], [52.9, 415.0], [53.0, 415.0], [53.1, 415.0], [53.2, 415.0], [53.3, 415.0], [53.4, 415.0], [53.5, 415.0], [53.6, 415.0], [53.7, 416.0], [53.8, 416.0], [53.9, 416.0], [54.0, 416.0], [54.1, 416.0], [54.2, 416.0], [54.3, 416.0], [54.4, 416.0], [54.5, 416.0], [54.6, 416.0], [54.7, 416.0], [54.8, 416.0], [54.9, 416.0], [55.0, 416.0], [55.1, 416.0], [55.2, 416.0], [55.3, 416.0], [55.4, 416.0], [55.5, 416.0], [55.6, 416.0], [55.7, 416.0], [55.8, 416.0], [55.9, 417.0], [56.0, 417.0], [56.1, 417.0], [56.2, 417.0], [56.3, 417.0], [56.4, 417.0], [56.5, 417.0], [56.6, 417.0], [56.7, 417.0], [56.8, 417.0], [56.9, 417.0], [57.0, 417.0], [57.1, 417.0], [57.2, 417.0], [57.3, 417.0], [57.4, 417.0], [57.5, 417.0], [57.6, 417.0], [57.7, 417.0], [57.8, 418.0], [57.9, 418.0], [58.0, 418.0], [58.1, 418.0], [58.2, 418.0], [58.3, 418.0], [58.4, 418.0], [58.5, 418.0], [58.6, 418.0], [58.7, 418.0], [58.8, 418.0], [58.9, 418.0], [59.0, 418.0], [59.1, 418.0], [59.2, 418.0], [59.3, 418.0], [59.4, 418.0], [59.5, 418.0], [59.6, 418.0], [59.7, 418.0], [59.8, 418.0], [59.9, 418.0], [60.0, 418.0], [60.1, 418.0], [60.2, 419.0], [60.3, 419.0], [60.4, 419.0], [60.5, 419.0], [60.6, 419.0], [60.7, 419.0], [60.8, 419.0], [60.9, 419.0], [61.0, 419.0], [61.1, 419.0], [61.2, 419.0], [61.3, 419.0], [61.4, 419.0], [61.5, 419.0], [61.6, 419.0], [61.7, 419.0], [61.8, 419.0], [61.9, 419.0], [62.0, 419.0], [62.1, 419.0], [62.2, 419.0], [62.3, 419.0], [62.4, 420.0], [62.5, 420.0], [62.6, 420.0], [62.7, 420.0], [62.8, 420.0], [62.9, 420.0], [63.0, 420.0], [63.1, 420.0], [63.2, 420.0], [63.3, 420.0], [63.4, 420.0], [63.5, 420.0], [63.6, 420.0], [63.7, 420.0], [63.8, 420.0], [63.9, 420.0], [64.0, 420.0], [64.1, 420.0], [64.2, 420.0], [64.3, 420.0], [64.4, 420.0], [64.5, 420.0], [64.6, 420.0], [64.7, 420.0], [64.8, 420.0], [64.9, 421.0], [65.0, 421.0], [65.1, 421.0], [65.2, 421.0], [65.3, 421.0], [65.4, 421.0], [65.5, 421.0], [65.6, 421.0], [65.7, 421.0], [65.8, 421.0], [65.9, 421.0], [66.0, 421.0], [66.1, 421.0], [66.2, 421.0], [66.3, 421.0], [66.4, 421.0], [66.5, 421.0], [66.6, 421.0], [66.7, 421.0], [66.8, 421.0], [66.9, 421.0], [67.0, 422.0], [67.1, 422.0], [67.2, 422.0], [67.3, 422.0], [67.4, 422.0], [67.5, 422.0], [67.6, 422.0], [67.7, 422.0], [67.8, 422.0], [67.9, 422.0], [68.0, 422.0], [68.1, 422.0], [68.2, 422.0], [68.3, 422.0], [68.4, 422.0], [68.5, 422.0], [68.6, 422.0], [68.7, 422.0], [68.8, 422.0], [68.9, 422.0], [69.0, 422.0], [69.1, 422.0], [69.2, 422.0], [69.3, 423.0], [69.4, 423.0], [69.5, 423.0], [69.6, 423.0], [69.7, 423.0], [69.8, 423.0], [69.9, 423.0], [70.0, 423.0], [70.1, 423.0], [70.2, 423.0], [70.3, 423.0], [70.4, 423.0], [70.5, 423.0], [70.6, 423.0], [70.7, 423.0], [70.8, 423.0], [70.9, 424.0], [71.0, 424.0], [71.1, 424.0], [71.2, 424.0], [71.3, 424.0], [71.4, 424.0], [71.5, 424.0], [71.6, 424.0], [71.7, 424.0], [71.8, 424.0], [71.9, 424.0], [72.0, 424.0], [72.1, 424.0], [72.2, 424.0], [72.3, 424.0], [72.4, 425.0], [72.5, 425.0], [72.6, 425.0], [72.7, 425.0], [72.8, 425.0], [72.9, 425.0], [73.0, 425.0], [73.1, 425.0], [73.2, 425.0], [73.3, 425.0], [73.4, 425.0], [73.5, 425.0], [73.6, 425.0], [73.7, 425.0], [73.8, 425.0], [73.9, 426.0], [74.0, 426.0], [74.1, 426.0], [74.2, 426.0], [74.3, 426.0], [74.4, 426.0], [74.5, 426.0], [74.6, 426.0], [74.7, 427.0], [74.8, 427.0], [74.9, 427.0], [75.0, 427.0], [75.1, 427.0], [75.2, 427.0], [75.3, 427.0], [75.4, 427.0], [75.5, 427.0], [75.6, 427.0], [75.7, 427.0], [75.8, 427.0], [75.9, 427.0], [76.0, 427.0], [76.1, 427.0], [76.2, 427.0], [76.3, 427.0], [76.4, 428.0], [76.5, 428.0], [76.6, 428.0], [76.7, 428.0], [76.8, 428.0], [76.9, 428.0], [77.0, 428.0], [77.1, 428.0], [77.2, 428.0], [77.3, 428.0], [77.4, 428.0], [77.5, 428.0], [77.6, 428.0], [77.7, 428.0], [77.8, 428.0], [77.9, 428.0], [78.0, 428.0], [78.1, 428.0], [78.2, 429.0], [78.3, 429.0], [78.4, 429.0], [78.5, 429.0], [78.6, 429.0], [78.7, 429.0], [78.8, 429.0], [78.9, 429.0], [79.0, 429.0], [79.1, 429.0], [79.2, 429.0], [79.3, 429.0], [79.4, 429.0], [79.5, 429.0], [79.6, 429.0], [79.7, 429.0], [79.8, 430.0], [79.9, 430.0], [80.0, 430.0], [80.1, 430.0], [80.2, 430.0], [80.3, 430.0], [80.4, 430.0], [80.5, 430.0], [80.6, 430.0], [80.7, 430.0], [80.8, 430.0], [80.9, 430.0], [81.0, 430.0], [81.1, 430.0], [81.2, 430.0], [81.3, 430.0], [81.4, 430.0], [81.5, 430.0], [81.6, 430.0], [81.7, 431.0], [81.8, 431.0], [81.9, 431.0], [82.0, 431.0], [82.1, 431.0], [82.2, 431.0], [82.3, 431.0], [82.4, 431.0], [82.5, 431.0], [82.6, 431.0], [82.7, 431.0], [82.8, 431.0], [82.9, 431.0], [83.0, 431.0], [83.1, 431.0], [83.2, 431.0], [83.3, 432.0], [83.4, 432.0], [83.5, 432.0], [83.6, 432.0], [83.7, 432.0], [83.8, 432.0], [83.9, 432.0], [84.0, 432.0], [84.1, 432.0], [84.2, 432.0], [84.3, 432.0], [84.4, 433.0], [84.5, 433.0], [84.6, 433.0], [84.7, 433.0], [84.8, 433.0], [84.9, 433.0], [85.0, 433.0], [85.1, 433.0], [85.2, 433.0], [85.3, 434.0], [85.4, 434.0], [85.5, 434.0], [85.6, 434.0], [85.7, 434.0], [85.8, 434.0], [85.9, 434.0], [86.0, 434.0], [86.1, 434.0], [86.2, 434.0], [86.3, 435.0], [86.4, 435.0], [86.5, 435.0], [86.6, 435.0], [86.7, 435.0], [86.8, 435.0], [86.9, 435.0], [87.0, 435.0], [87.1, 435.0], [87.2, 436.0], [87.3, 436.0], [87.4, 436.0], [87.5, 436.0], [87.6, 436.0], [87.7, 436.0], [87.8, 436.0], [87.9, 436.0], [88.0, 437.0], [88.1, 437.0], [88.2, 437.0], [88.3, 437.0], [88.4, 437.0], [88.5, 437.0], [88.6, 437.0], [88.7, 437.0], [88.8, 438.0], [88.9, 438.0], [89.0, 438.0], [89.1, 438.0], [89.2, 438.0], [89.3, 438.0], [89.4, 438.0], [89.5, 438.0], [89.6, 438.0], [89.7, 439.0], [89.8, 439.0], [89.9, 439.0], [90.0, 439.0], [90.1, 439.0], [90.2, 439.0], [90.3, 440.0], [90.4, 440.0], [90.5, 440.0], [90.6, 440.0], [90.7, 441.0], [90.8, 441.0], [90.9, 441.0], [91.0, 442.0], [91.1, 442.0], [91.2, 442.0], [91.3, 443.0], [91.4, 443.0], [91.5, 444.0], [91.6, 444.0], [91.7, 444.0], [91.8, 444.0], [91.9, 444.0], [92.0, 444.0], [92.1, 444.0], [92.2, 445.0], [92.3, 445.0], [92.4, 446.0], [92.5, 446.0], [92.6, 446.0], [92.7, 446.0], [92.8, 446.0], [92.9, 447.0], [93.0, 447.0], [93.1, 447.0], [93.2, 447.0], [93.3, 448.0], [93.4, 448.0], [93.5, 449.0], [93.6, 449.0], [93.7, 449.0], [93.8, 449.0], [93.9, 450.0], [94.0, 450.0], [94.1, 450.0], [94.2, 450.0], [94.3, 451.0], [94.4, 452.0], [94.5, 453.0], [94.6, 453.0], [94.7, 453.0], [94.8, 454.0], [94.9, 454.0], [95.0, 456.0], [95.1, 456.0], [95.2, 456.0], [95.3, 456.0], [95.4, 456.0], [95.5, 457.0], [95.6, 457.0], [95.7, 457.0], [95.8, 460.0], [95.9, 461.0], [96.0, 462.0], [96.1, 462.0], [96.2, 462.0], [96.3, 465.0], [96.4, 465.0], [96.5, 466.0], [96.6, 466.0], [96.7, 466.0], [96.8, 466.0], [96.9, 467.0], [97.0, 468.0], [97.1, 468.0], [97.2, 472.0], [97.3, 476.0], [97.4, 476.0], [97.5, 480.0], [97.6, 480.0], [97.7, 487.0], [97.8, 487.0], [97.9, 488.0], [98.0, 492.0], [98.1, 492.0], [98.2, 493.0], [98.3, 498.0], [98.4, 500.0], [98.5, 505.0], [98.6, 505.0], [98.7, 506.0], [98.8, 507.0], [98.9, 507.0], [99.0, 515.0], [99.1, 515.0], [99.2, 517.0], [99.3, 536.0], [99.4, 539.0], [99.5, 542.0], [99.6, 542.0], [99.7, 543.0], [99.8, 568.0], [99.9, 571.0]], "isOverall": false, "label": "https://blazedemo.com/purchase.php", "isController": false}, {"data": [[0.0, 1252.0], [0.1, 1252.0], [0.2, 1374.0], [0.3, 1383.0], [0.4, 1391.0], [0.5, 1426.0], [0.6, 1426.0], [0.7, 1445.0], [0.8, 1495.0], [0.9, 1503.0], [1.0, 1507.0], [1.1, 1507.0], [1.2, 1508.0], [1.3, 1510.0], [1.4, 1515.0], [1.5, 1529.0], [1.6, 1529.0], [1.7, 1532.0], [1.8, 1533.0], [1.9, 1536.0], [2.0, 1536.0], [2.1, 1536.0], [2.2, 1541.0], [2.3, 1550.0], [2.4, 1554.0], [2.5, 1559.0], [2.6, 1559.0], [2.7, 1567.0], [2.8, 1569.0], [2.9, 1575.0], [3.0, 1581.0], [3.1, 1581.0], [3.2, 1582.0], [3.3, 1582.0], [3.4, 1583.0], [3.5, 1587.0], [3.6, 1587.0], [3.7, 1587.0], [3.8, 1594.0], [3.9, 1596.0], [4.0, 1600.0], [4.1, 1600.0], [4.2, 1601.0], [4.3, 1602.0], [4.4, 1617.0], [4.5, 1626.0], [4.6, 1626.0], [4.7, 1630.0], [4.8, 1630.0], [4.9, 1632.0], [5.0, 1633.0], [5.1, 1633.0], [5.2, 1637.0], [5.3, 1637.0], [5.4, 1638.0], [5.5, 1640.0], [5.6, 1640.0], [5.7, 1641.0], [5.8, 1642.0], [5.9, 1642.0], [6.0, 1643.0], [6.1, 1643.0], [6.2, 1643.0], [6.3, 1644.0], [6.4, 1644.0], [6.5, 1645.0], [6.6, 1645.0], [6.7, 1645.0], [6.8, 1646.0], [6.9, 1647.0], [7.0, 1656.0], [7.1, 1656.0], [7.2, 1656.0], [7.3, 1657.0], [7.4, 1658.0], [7.5, 1659.0], [7.6, 1659.0], [7.7, 1659.0], [7.8, 1660.0], [7.9, 1660.0], [8.0, 1662.0], [8.1, 1662.0], [8.2, 1663.0], [8.3, 1663.0], [8.4, 1664.0], [8.5, 1664.0], [8.6, 1664.0], [8.7, 1665.0], [8.8, 1666.0], [8.9, 1666.0], [9.0, 1667.0], [9.1, 1667.0], [9.2, 1667.0], [9.3, 1668.0], [9.4, 1668.0], [9.5, 1669.0], [9.6, 1669.0], [9.7, 1669.0], [9.8, 1669.0], [9.9, 1670.0], [10.0, 1670.0], [10.1, 1670.0], [10.2, 1671.0], [10.3, 1672.0], [10.4, 1673.0], [10.5, 1673.0], [10.6, 1673.0], [10.7, 1675.0], [10.8, 1676.0], [10.9, 1680.0], [11.0, 1680.0], [11.1, 1680.0], [11.2, 1680.0], [11.3, 1681.0], [11.4, 1681.0], [11.5, 1681.0], [11.6, 1681.0], [11.7, 1682.0], [11.8, 1682.0], [11.9, 1682.0], [12.0, 1683.0], [12.1, 1683.0], [12.2, 1683.0], [12.3, 1683.0], [12.4, 1684.0], [12.5, 1685.0], [12.6, 1685.0], [12.7, 1685.0], [12.8, 1685.0], [12.9, 1686.0], [13.0, 1686.0], [13.1, 1686.0], [13.2, 1686.0], [13.3, 1687.0], [13.4, 1687.0], [13.5, 1687.0], [13.6, 1687.0], [13.7, 1688.0], [13.8, 1688.0], [13.9, 1689.0], [14.0, 1689.0], [14.1, 1689.0], [14.2, 1689.0], [14.3, 1689.0], [14.4, 1690.0], [14.5, 1691.0], [14.6, 1691.0], [14.7, 1691.0], [14.8, 1692.0], [14.9, 1692.0], [15.0, 1695.0], [15.1, 1695.0], [15.2, 1695.0], [15.3, 1696.0], [15.4, 1697.0], [15.5, 1698.0], [15.6, 1698.0], [15.7, 1699.0], [15.8, 1701.0], [15.9, 1701.0], [16.0, 1702.0], [16.1, 1702.0], [16.2, 1702.0], [16.3, 1702.0], [16.4, 1702.0], [16.5, 1703.0], [16.6, 1703.0], [16.7, 1703.0], [16.8, 1703.0], [16.9, 1704.0], [17.0, 1706.0], [17.1, 1706.0], [17.2, 1707.0], [17.3, 1707.0], [17.4, 1708.0], [17.5, 1708.0], [17.6, 1708.0], [17.7, 1708.0], [17.8, 1709.0], [17.9, 1709.0], [18.0, 1709.0], [18.1, 1709.0], [18.2, 1709.0], [18.3, 1710.0], [18.4, 1710.0], [18.5, 1710.0], [18.6, 1710.0], [18.7, 1710.0], [18.8, 1710.0], [18.9, 1710.0], [19.0, 1711.0], [19.1, 1711.0], [19.2, 1711.0], [19.3, 1711.0], [19.4, 1711.0], [19.5, 1711.0], [19.6, 1711.0], [19.7, 1711.0], [19.8, 1712.0], [19.9, 1713.0], [20.0, 1713.0], [20.1, 1713.0], [20.2, 1713.0], [20.3, 1713.0], [20.4, 1713.0], [20.5, 1713.0], [20.6, 1713.0], [20.7, 1714.0], [20.8, 1714.0], [20.9, 1714.0], [21.0, 1714.0], [21.1, 1714.0], [21.2, 1715.0], [21.3, 1715.0], [21.4, 1715.0], [21.5, 1716.0], [21.6, 1716.0], [21.7, 1716.0], [21.8, 1717.0], [21.9, 1718.0], [22.0, 1718.0], [22.1, 1718.0], [22.2, 1718.0], [22.3, 1718.0], [22.4, 1719.0], [22.5, 1719.0], [22.6, 1719.0], [22.7, 1719.0], [22.8, 1719.0], [22.9, 1719.0], [23.0, 1720.0], [23.1, 1720.0], [23.2, 1720.0], [23.3, 1720.0], [23.4, 1720.0], [23.5, 1720.0], [23.6, 1720.0], [23.7, 1720.0], [23.8, 1721.0], [23.9, 1721.0], [24.0, 1721.0], [24.1, 1721.0], [24.2, 1722.0], [24.3, 1723.0], [24.4, 1723.0], [24.5, 1723.0], [24.6, 1723.0], [24.7, 1724.0], [24.8, 1724.0], [24.9, 1724.0], [25.0, 1724.0], [25.1, 1724.0], [25.2, 1725.0], [25.3, 1725.0], [25.4, 1725.0], [25.5, 1726.0], [25.6, 1726.0], [25.7, 1726.0], [25.8, 1727.0], [25.9, 1727.0], [26.0, 1727.0], [26.1, 1727.0], [26.2, 1727.0], [26.3, 1727.0], [26.4, 1728.0], [26.5, 1728.0], [26.6, 1728.0], [26.7, 1728.0], [26.8, 1729.0], [26.9, 1729.0], [27.0, 1729.0], [27.1, 1729.0], [27.2, 1729.0], [27.3, 1730.0], [27.4, 1730.0], [27.5, 1730.0], [27.6, 1730.0], [27.7, 1730.0], [27.8, 1730.0], [27.9, 1730.0], [28.0, 1731.0], [28.1, 1731.0], [28.2, 1731.0], [28.3, 1731.0], [28.4, 1731.0], [28.5, 1731.0], [28.6, 1731.0], [28.7, 1731.0], [28.8, 1731.0], [28.9, 1731.0], [29.0, 1731.0], [29.1, 1731.0], [29.2, 1732.0], [29.3, 1732.0], [29.4, 1732.0], [29.5, 1732.0], [29.6, 1732.0], [29.7, 1732.0], [29.8, 1732.0], [29.9, 1733.0], [30.0, 1733.0], [30.1, 1733.0], [30.2, 1733.0], [30.3, 1734.0], [30.4, 1734.0], [30.5, 1734.0], [30.6, 1734.0], [30.7, 1734.0], [30.8, 1734.0], [30.9, 1734.0], [31.0, 1734.0], [31.1, 1734.0], [31.2, 1736.0], [31.3, 1736.0], [31.4, 1736.0], [31.5, 1736.0], [31.6, 1736.0], [31.7, 1736.0], [31.8, 1736.0], [31.9, 1736.0], [32.0, 1736.0], [32.1, 1736.0], [32.2, 1737.0], [32.3, 1737.0], [32.4, 1737.0], [32.5, 1737.0], [32.6, 1737.0], [32.7, 1737.0], [32.8, 1738.0], [32.9, 1738.0], [33.0, 1738.0], [33.1, 1738.0], [33.2, 1738.0], [33.3, 1738.0], [33.4, 1738.0], [33.5, 1738.0], [33.6, 1738.0], [33.7, 1738.0], [33.8, 1739.0], [33.9, 1739.0], [34.0, 1739.0], [34.1, 1739.0], [34.2, 1739.0], [34.3, 1739.0], [34.4, 1740.0], [34.5, 1740.0], [34.6, 1740.0], [34.7, 1740.0], [34.8, 1740.0], [34.9, 1741.0], [35.0, 1742.0], [35.1, 1742.0], [35.2, 1742.0], [35.3, 1742.0], [35.4, 1742.0], [35.5, 1743.0], [35.6, 1743.0], [35.7, 1743.0], [35.8, 1743.0], [35.9, 1743.0], [36.0, 1743.0], [36.1, 1743.0], [36.2, 1744.0], [36.3, 1744.0], [36.4, 1744.0], [36.5, 1744.0], [36.6, 1744.0], [36.7, 1745.0], [36.8, 1745.0], [36.9, 1746.0], [37.0, 1746.0], [37.1, 1746.0], [37.2, 1746.0], [37.3, 1746.0], [37.4, 1746.0], [37.5, 1746.0], [37.6, 1746.0], [37.7, 1746.0], [37.8, 1746.0], [37.9, 1747.0], [38.0, 1747.0], [38.1, 1747.0], [38.2, 1747.0], [38.3, 1747.0], [38.4, 1747.0], [38.5, 1748.0], [38.6, 1748.0], [38.7, 1748.0], [38.8, 1748.0], [38.9, 1748.0], [39.0, 1748.0], [39.1, 1748.0], [39.2, 1748.0], [39.3, 1748.0], [39.4, 1748.0], [39.5, 1749.0], [39.6, 1749.0], [39.7, 1749.0], [39.8, 1749.0], [39.9, 1749.0], [40.0, 1749.0], [40.1, 1749.0], [40.2, 1749.0], [40.3, 1749.0], [40.4, 1749.0], [40.5, 1749.0], [40.6, 1749.0], [40.7, 1750.0], [40.8, 1750.0], [40.9, 1750.0], [41.0, 1750.0], [41.1, 1750.0], [41.2, 1750.0], [41.3, 1750.0], [41.4, 1751.0], [41.5, 1751.0], [41.6, 1751.0], [41.7, 1751.0], [41.8, 1752.0], [41.9, 1752.0], [42.0, 1752.0], [42.1, 1752.0], [42.2, 1753.0], [42.3, 1753.0], [42.4, 1753.0], [42.5, 1753.0], [42.6, 1753.0], [42.7, 1753.0], [42.8, 1754.0], [42.9, 1754.0], [43.0, 1754.0], [43.1, 1754.0], [43.2, 1754.0], [43.3, 1754.0], [43.4, 1754.0], [43.5, 1755.0], [43.6, 1755.0], [43.7, 1755.0], [43.8, 1755.0], [43.9, 1755.0], [44.0, 1755.0], [44.1, 1755.0], [44.2, 1755.0], [44.3, 1756.0], [44.4, 1756.0], [44.5, 1756.0], [44.6, 1756.0], [44.7, 1756.0], [44.8, 1756.0], [44.9, 1756.0], [45.0, 1756.0], [45.1, 1756.0], [45.2, 1757.0], [45.3, 1757.0], [45.4, 1757.0], [45.5, 1757.0], [45.6, 1757.0], [45.7, 1757.0], [45.8, 1757.0], [45.9, 1757.0], [46.0, 1757.0], [46.1, 1757.0], [46.2, 1757.0], [46.3, 1758.0], [46.4, 1758.0], [46.5, 1758.0], [46.6, 1758.0], [46.7, 1758.0], [46.8, 1758.0], [46.9, 1759.0], [47.0, 1759.0], [47.1, 1759.0], [47.2, 1759.0], [47.3, 1759.0], [47.4, 1759.0], [47.5, 1759.0], [47.6, 1759.0], [47.7, 1759.0], [47.8, 1760.0], [47.9, 1760.0], [48.0, 1761.0], [48.1, 1761.0], [48.2, 1761.0], [48.3, 1761.0], [48.4, 1761.0], [48.5, 1761.0], [48.6, 1761.0], [48.7, 1762.0], [48.8, 1762.0], [48.9, 1762.0], [49.0, 1762.0], [49.1, 1762.0], [49.2, 1763.0], [49.3, 1763.0], [49.4, 1763.0], [49.5, 1763.0], [49.6, 1763.0], [49.7, 1763.0], [49.8, 1763.0], [49.9, 1764.0], [50.0, 1764.0], [50.1, 1764.0], [50.2, 1764.0], [50.3, 1764.0], [50.4, 1764.0], [50.5, 1764.0], [50.6, 1764.0], [50.7, 1764.0], [50.8, 1765.0], [50.9, 1765.0], [51.0, 1765.0], [51.1, 1765.0], [51.2, 1765.0], [51.3, 1765.0], [51.4, 1765.0], [51.5, 1765.0], [51.6, 1765.0], [51.7, 1765.0], [51.8, 1765.0], [51.9, 1766.0], [52.0, 1766.0], [52.1, 1766.0], [52.2, 1766.0], [52.3, 1766.0], [52.4, 1766.0], [52.5, 1767.0], [52.6, 1767.0], [52.7, 1767.0], [52.8, 1767.0], [52.9, 1767.0], [53.0, 1767.0], [53.1, 1767.0], [53.2, 1767.0], [53.3, 1767.0], [53.4, 1767.0], [53.5, 1767.0], [53.6, 1767.0], [53.7, 1768.0], [53.8, 1768.0], [53.9, 1768.0], [54.0, 1768.0], [54.1, 1768.0], [54.2, 1768.0], [54.3, 1768.0], [54.4, 1769.0], [54.5, 1769.0], [54.6, 1769.0], [54.7, 1769.0], [54.8, 1769.0], [54.9, 1770.0], [55.0, 1770.0], [55.1, 1770.0], [55.2, 1770.0], [55.3, 1770.0], [55.4, 1770.0], [55.5, 1770.0], [55.6, 1770.0], [55.7, 1771.0], [55.8, 1771.0], [55.9, 1771.0], [56.0, 1771.0], [56.1, 1771.0], [56.2, 1771.0], [56.3, 1771.0], [56.4, 1771.0], [56.5, 1772.0], [56.6, 1772.0], [56.7, 1772.0], [56.8, 1772.0], [56.9, 1772.0], [57.0, 1772.0], [57.1, 1772.0], [57.2, 1772.0], [57.3, 1773.0], [57.4, 1773.0], [57.5, 1773.0], [57.6, 1773.0], [57.7, 1773.0], [57.8, 1773.0], [57.9, 1773.0], [58.0, 1773.0], [58.1, 1773.0], [58.2, 1773.0], [58.3, 1774.0], [58.4, 1774.0], [58.5, 1774.0], [58.6, 1774.0], [58.7, 1774.0], [58.8, 1774.0], [58.9, 1774.0], [59.0, 1774.0], [59.1, 1774.0], [59.2, 1775.0], [59.3, 1775.0], [59.4, 1775.0], [59.5, 1775.0], [59.6, 1775.0], [59.7, 1775.0], [59.8, 1775.0], [59.9, 1776.0], [60.0, 1776.0], [60.1, 1776.0], [60.2, 1777.0], [60.3, 1777.0], [60.4, 1777.0], [60.5, 1777.0], [60.6, 1777.0], [60.7, 1777.0], [60.8, 1777.0], [60.9, 1778.0], [61.0, 1778.0], [61.1, 1778.0], [61.2, 1778.0], [61.3, 1778.0], [61.4, 1778.0], [61.5, 1778.0], [61.6, 1778.0], [61.7, 1778.0], [61.8, 1778.0], [61.9, 1778.0], [62.0, 1778.0], [62.1, 1778.0], [62.2, 1779.0], [62.3, 1779.0], [62.4, 1779.0], [62.5, 1779.0], [62.6, 1779.0], [62.7, 1779.0], [62.8, 1779.0], [62.9, 1780.0], [63.0, 1780.0], [63.1, 1780.0], [63.2, 1780.0], [63.3, 1780.0], [63.4, 1780.0], [63.5, 1780.0], [63.6, 1780.0], [63.7, 1781.0], [63.8, 1781.0], [63.9, 1781.0], [64.0, 1781.0], [64.1, 1781.0], [64.2, 1782.0], [64.3, 1782.0], [64.4, 1782.0], [64.5, 1783.0], [64.6, 1783.0], [64.7, 1783.0], [64.8, 1783.0], [64.9, 1783.0], [65.0, 1783.0], [65.1, 1783.0], [65.2, 1784.0], [65.3, 1784.0], [65.4, 1784.0], [65.5, 1784.0], [65.6, 1784.0], [65.7, 1784.0], [65.8, 1784.0], [65.9, 1784.0], [66.0, 1784.0], [66.1, 1784.0], [66.2, 1785.0], [66.3, 1785.0], [66.4, 1785.0], [66.5, 1785.0], [66.6, 1785.0], [66.7, 1785.0], [66.8, 1785.0], [66.9, 1786.0], [67.0, 1786.0], [67.1, 1786.0], [67.2, 1787.0], [67.3, 1787.0], [67.4, 1787.0], [67.5, 1787.0], [67.6, 1787.0], [67.7, 1787.0], [67.8, 1787.0], [67.9, 1787.0], [68.0, 1787.0], [68.1, 1787.0], [68.2, 1788.0], [68.3, 1789.0], [68.4, 1789.0], [68.5, 1789.0], [68.6, 1789.0], [68.7, 1790.0], [68.8, 1790.0], [68.9, 1790.0], [69.0, 1790.0], [69.1, 1790.0], [69.2, 1790.0], [69.3, 1790.0], [69.4, 1791.0], [69.5, 1792.0], [69.6, 1792.0], [69.7, 1792.0], [69.8, 1792.0], [69.9, 1792.0], [70.0, 1792.0], [70.1, 1792.0], [70.2, 1792.0], [70.3, 1793.0], [70.4, 1793.0], [70.5, 1793.0], [70.6, 1793.0], [70.7, 1793.0], [70.8, 1793.0], [70.9, 1794.0], [71.0, 1794.0], [71.1, 1794.0], [71.2, 1794.0], [71.3, 1794.0], [71.4, 1794.0], [71.5, 1794.0], [71.6, 1794.0], [71.7, 1795.0], [71.8, 1795.0], [71.9, 1795.0], [72.0, 1795.0], [72.1, 1795.0], [72.2, 1795.0], [72.3, 1795.0], [72.4, 1795.0], [72.5, 1795.0], [72.6, 1795.0], [72.7, 1796.0], [72.8, 1796.0], [72.9, 1796.0], [73.0, 1796.0], [73.1, 1796.0], [73.2, 1796.0], [73.3, 1797.0], [73.4, 1797.0], [73.5, 1798.0], [73.6, 1798.0], [73.7, 1798.0], [73.8, 1798.0], [73.9, 1798.0], [74.0, 1798.0], [74.1, 1798.0], [74.2, 1798.0], [74.3, 1798.0], [74.4, 1798.0], [74.5, 1798.0], [74.6, 1798.0], [74.7, 1798.0], [74.8, 1798.0], [74.9, 1798.0], [75.0, 1799.0], [75.1, 1799.0], [75.2, 1799.0], [75.3, 1799.0], [75.4, 1799.0], [75.5, 1799.0], [75.6, 1799.0], [75.7, 1799.0], [75.8, 1799.0], [75.9, 1799.0], [76.0, 1800.0], [76.1, 1800.0], [76.2, 1800.0], [76.3, 1800.0], [76.4, 1800.0], [76.5, 1800.0], [76.6, 1800.0], [76.7, 1800.0], [76.8, 1801.0], [76.9, 1801.0], [77.0, 1801.0], [77.1, 1801.0], [77.2, 1801.0], [77.3, 1801.0], [77.4, 1802.0], [77.5, 1802.0], [77.6, 1802.0], [77.7, 1803.0], [77.8, 1803.0], [77.9, 1804.0], [78.0, 1804.0], [78.1, 1804.0], [78.2, 1804.0], [78.3, 1804.0], [78.4, 1804.0], [78.5, 1804.0], [78.6, 1804.0], [78.7, 1804.0], [78.8, 1805.0], [78.9, 1805.0], [79.0, 1805.0], [79.1, 1805.0], [79.2, 1805.0], [79.3, 1805.0], [79.4, 1805.0], [79.5, 1805.0], [79.6, 1805.0], [79.7, 1806.0], [79.8, 1806.0], [79.9, 1806.0], [80.0, 1807.0], [80.1, 1807.0], [80.2, 1807.0], [80.3, 1807.0], [80.4, 1807.0], [80.5, 1808.0], [80.6, 1808.0], [80.7, 1809.0], [80.8, 1809.0], [80.9, 1809.0], [81.0, 1809.0], [81.1, 1809.0], [81.2, 1809.0], [81.3, 1810.0], [81.4, 1810.0], [81.5, 1810.0], [81.6, 1810.0], [81.7, 1810.0], [81.8, 1810.0], [81.9, 1810.0], [82.0, 1811.0], [82.1, 1811.0], [82.2, 1812.0], [82.3, 1812.0], [82.4, 1812.0], [82.5, 1812.0], [82.6, 1812.0], [82.7, 1812.0], [82.8, 1813.0], [82.9, 1813.0], [83.0, 1813.0], [83.1, 1813.0], [83.2, 1814.0], [83.3, 1814.0], [83.4, 1814.0], [83.5, 1814.0], [83.6, 1814.0], [83.7, 1815.0], [83.8, 1815.0], [83.9, 1815.0], [84.0, 1815.0], [84.1, 1815.0], [84.2, 1816.0], [84.3, 1816.0], [84.4, 1817.0], [84.5, 1817.0], [84.6, 1817.0], [84.7, 1817.0], [84.8, 1818.0], [84.9, 1818.0], [85.0, 1818.0], [85.1, 1818.0], [85.2, 1818.0], [85.3, 1819.0], [85.4, 1819.0], [85.5, 1819.0], [85.6, 1819.0], [85.7, 1819.0], [85.8, 1820.0], [85.9, 1820.0], [86.0, 1820.0], [86.1, 1820.0], [86.2, 1820.0], [86.3, 1821.0], [86.4, 1821.0], [86.5, 1822.0], [86.6, 1822.0], [86.7, 1822.0], [86.8, 1823.0], [86.9, 1824.0], [87.0, 1824.0], [87.1, 1824.0], [87.2, 1824.0], [87.3, 1824.0], [87.4, 1824.0], [87.5, 1825.0], [87.6, 1825.0], [87.7, 1826.0], [87.8, 1827.0], [87.9, 1827.0], [88.0, 1827.0], [88.1, 1827.0], [88.2, 1827.0], [88.3, 1827.0], [88.4, 1827.0], [88.5, 1827.0], [88.6, 1827.0], [88.7, 1828.0], [88.8, 1828.0], [88.9, 1829.0], [89.0, 1829.0], [89.1, 1829.0], [89.2, 1831.0], [89.3, 1832.0], [89.4, 1832.0], [89.5, 1832.0], [89.6, 1832.0], [89.7, 1834.0], [89.8, 1834.0], [89.9, 1835.0], [90.0, 1835.0], [90.1, 1835.0], [90.2, 1835.0], [90.3, 1836.0], [90.4, 1836.0], [90.5, 1836.0], [90.6, 1836.0], [90.7, 1836.0], [90.8, 1837.0], [90.9, 1837.0], [91.0, 1838.0], [91.1, 1838.0], [91.2, 1840.0], [91.3, 1841.0], [91.4, 1842.0], [91.5, 1844.0], [91.6, 1844.0], [91.7, 1844.0], [91.8, 1846.0], [91.9, 1846.0], [92.0, 1846.0], [92.1, 1846.0], [92.2, 1848.0], [92.3, 1848.0], [92.4, 1848.0], [92.5, 1851.0], [92.6, 1851.0], [92.7, 1852.0], [92.8, 1852.0], [92.9, 1853.0], [93.0, 1854.0], [93.1, 1854.0], [93.2, 1855.0], [93.3, 1855.0], [93.4, 1857.0], [93.5, 1859.0], [93.6, 1859.0], [93.7, 1859.0], [93.8, 1860.0], [93.9, 1860.0], [94.0, 1861.0], [94.1, 1861.0], [94.2, 1863.0], [94.3, 1865.0], [94.4, 1866.0], [94.5, 1867.0], [94.6, 1867.0], [94.7, 1867.0], [94.8, 1867.0], [94.9, 1869.0], [95.0, 1870.0], [95.1, 1870.0], [95.2, 1871.0], [95.3, 1872.0], [95.4, 1872.0], [95.5, 1872.0], [95.6, 1872.0], [95.7, 1872.0], [95.8, 1878.0], [95.9, 1884.0], [96.0, 1890.0], [96.1, 1890.0], [96.2, 1892.0], [96.3, 1894.0], [96.4, 1896.0], [96.5, 1897.0], [96.6, 1897.0], [96.7, 1898.0], [96.8, 1899.0], [96.9, 1899.0], [97.0, 1900.0], [97.1, 1900.0], [97.2, 1900.0], [97.3, 1910.0], [97.4, 1911.0], [97.5, 1911.0], [97.6, 1911.0], [97.7, 1914.0], [97.8, 1929.0], [97.9, 1948.0], [98.0, 1959.0], [98.1, 1959.0], [98.2, 1960.0], [98.3, 1961.0], [98.4, 1969.0], [98.5, 1978.0], [98.6, 1978.0], [98.7, 1979.0], [98.8, 2009.0], [98.9, 2045.0], [99.0, 2048.0], [99.1, 2048.0], [99.2, 2089.0], [99.3, 2189.0], [99.4, 2584.0], [99.5, 2706.0], [99.6, 2706.0], [99.7, 3096.0], [99.8, 3122.0], [99.9, 3153.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 274.0], [0.1, 274.0], [0.2, 280.0], [0.3, 281.0], [0.4, 281.0], [0.5, 282.0], [0.6, 282.0], [0.7, 283.0], [0.8, 283.0], [0.9, 284.0], [1.0, 285.0], [1.1, 285.0], [1.2, 286.0], [1.3, 287.0], [1.4, 287.0], [1.5, 290.0], [1.6, 290.0], [1.7, 293.0], [1.8, 293.0], [1.9, 300.0], [2.0, 300.0], [2.1, 300.0], [2.2, 300.0], [2.3, 304.0], [2.4, 304.0], [2.5, 339.0], [2.6, 339.0], [2.7, 342.0], [2.8, 345.0], [2.9, 355.0], [3.0, 357.0], [3.1, 357.0], [3.2, 359.0], [3.3, 363.0], [3.4, 363.0], [3.5, 364.0], [3.6, 364.0], [3.7, 364.0], [3.8, 365.0], [3.9, 366.0], [4.0, 367.0], [4.1, 367.0], [4.2, 370.0], [4.3, 371.0], [4.4, 372.0], [4.5, 373.0], [4.6, 373.0], [4.7, 374.0], [4.8, 375.0], [4.9, 376.0], [5.0, 376.0], [5.1, 376.0], [5.2, 376.0], [5.3, 376.0], [5.4, 376.0], [5.5, 377.0], [5.6, 377.0], [5.7, 377.0], [5.8, 378.0], [5.9, 378.0], [6.0, 378.0], [6.1, 378.0], [6.2, 378.0], [6.3, 379.0], [6.4, 379.0], [6.5, 379.0], [6.6, 379.0], [6.7, 379.0], [6.8, 380.0], [6.9, 380.0], [7.0, 380.0], [7.1, 380.0], [7.2, 380.0], [7.3, 380.0], [7.4, 380.0], [7.5, 381.0], [7.6, 381.0], [7.7, 381.0], [7.8, 381.0], [7.9, 382.0], [8.0, 382.0], [8.1, 382.0], [8.2, 382.0], [8.3, 383.0], [8.4, 383.0], [8.5, 383.0], [8.6, 383.0], [8.7, 383.0], [8.8, 383.0], [8.9, 383.0], [9.0, 384.0], [9.1, 384.0], [9.2, 385.0], [9.3, 385.0], [9.4, 385.0], [9.5, 385.0], [9.6, 385.0], [9.7, 385.0], [9.8, 386.0], [9.9, 386.0], [10.0, 386.0], [10.1, 386.0], [10.2, 386.0], [10.3, 386.0], [10.4, 386.0], [10.5, 386.0], [10.6, 386.0], [10.7, 387.0], [10.8, 387.0], [10.9, 388.0], [11.0, 388.0], [11.1, 388.0], [11.2, 388.0], [11.3, 388.0], [11.4, 389.0], [11.5, 389.0], [11.6, 389.0], [11.7, 389.0], [11.8, 390.0], [11.9, 390.0], [12.0, 390.0], [12.1, 390.0], [12.2, 390.0], [12.3, 390.0], [12.4, 390.0], [12.5, 390.0], [12.6, 390.0], [12.7, 390.0], [12.8, 391.0], [12.9, 391.0], [13.0, 391.0], [13.1, 391.0], [13.2, 391.0], [13.3, 391.0], [13.4, 392.0], [13.5, 392.0], [13.6, 392.0], [13.7, 392.0], [13.8, 392.0], [13.9, 392.0], [14.0, 392.0], [14.1, 392.0], [14.2, 392.0], [14.3, 392.0], [14.4, 392.0], [14.5, 392.0], [14.6, 392.0], [14.7, 392.0], [14.8, 392.0], [14.9, 392.0], [15.0, 392.0], [15.1, 392.0], [15.2, 393.0], [15.3, 393.0], [15.4, 393.0], [15.5, 393.0], [15.6, 393.0], [15.7, 393.0], [15.8, 393.0], [15.9, 394.0], [16.0, 394.0], [16.1, 394.0], [16.2, 394.0], [16.3, 394.0], [16.4, 394.0], [16.5, 394.0], [16.6, 394.0], [16.7, 395.0], [16.8, 395.0], [16.9, 395.0], [17.0, 395.0], [17.1, 395.0], [17.2, 395.0], [17.3, 395.0], [17.4, 395.0], [17.5, 395.0], [17.6, 395.0], [17.7, 396.0], [17.8, 396.0], [17.9, 396.0], [18.0, 396.0], [18.1, 396.0], [18.2, 396.0], [18.3, 396.0], [18.4, 396.0], [18.5, 397.0], [18.6, 397.0], [18.7, 397.0], [18.8, 397.0], [18.9, 397.0], [19.0, 397.0], [19.1, 397.0], [19.2, 397.0], [19.3, 397.0], [19.4, 398.0], [19.5, 398.0], [19.6, 398.0], [19.7, 398.0], [19.8, 398.0], [19.9, 398.0], [20.0, 398.0], [20.1, 398.0], [20.2, 398.0], [20.3, 398.0], [20.4, 398.0], [20.5, 398.0], [20.6, 398.0], [20.7, 398.0], [20.8, 399.0], [20.9, 399.0], [21.0, 399.0], [21.1, 399.0], [21.2, 399.0], [21.3, 399.0], [21.4, 399.0], [21.5, 399.0], [21.6, 399.0], [21.7, 399.0], [21.8, 399.0], [21.9, 399.0], [22.0, 399.0], [22.1, 399.0], [22.2, 399.0], [22.3, 400.0], [22.4, 400.0], [22.5, 400.0], [22.6, 400.0], [22.7, 400.0], [22.8, 400.0], [22.9, 400.0], [23.0, 400.0], [23.1, 400.0], [23.2, 400.0], [23.3, 400.0], [23.4, 401.0], [23.5, 401.0], [23.6, 401.0], [23.7, 401.0], [23.8, 401.0], [23.9, 401.0], [24.0, 401.0], [24.1, 401.0], [24.2, 401.0], [24.3, 401.0], [24.4, 401.0], [24.5, 401.0], [24.6, 401.0], [24.7, 401.0], [24.8, 401.0], [24.9, 401.0], [25.0, 401.0], [25.1, 401.0], [25.2, 401.0], [25.3, 402.0], [25.4, 402.0], [25.5, 402.0], [25.6, 402.0], [25.7, 402.0], [25.8, 402.0], [25.9, 402.0], [26.0, 402.0], [26.1, 402.0], [26.2, 402.0], [26.3, 402.0], [26.4, 402.0], [26.5, 402.0], [26.6, 402.0], [26.7, 403.0], [26.8, 403.0], [26.9, 403.0], [27.0, 403.0], [27.1, 403.0], [27.2, 403.0], [27.3, 403.0], [27.4, 403.0], [27.5, 403.0], [27.6, 403.0], [27.7, 403.0], [27.8, 403.0], [27.9, 403.0], [28.0, 403.0], [28.1, 403.0], [28.2, 403.0], [28.3, 403.0], [28.4, 403.0], [28.5, 404.0], [28.6, 404.0], [28.7, 404.0], [28.8, 404.0], [28.9, 404.0], [29.0, 404.0], [29.1, 404.0], [29.2, 404.0], [29.3, 404.0], [29.4, 404.0], [29.5, 404.0], [29.6, 404.0], [29.7, 404.0], [29.8, 404.0], [29.9, 404.0], [30.0, 404.0], [30.1, 404.0], [30.2, 404.0], [30.3, 404.0], [30.4, 405.0], [30.5, 405.0], [30.6, 405.0], [30.7, 405.0], [30.8, 405.0], [30.9, 405.0], [31.0, 405.0], [31.1, 405.0], [31.2, 405.0], [31.3, 405.0], [31.4, 405.0], [31.5, 405.0], [31.6, 405.0], [31.7, 405.0], [31.8, 405.0], [31.9, 405.0], [32.0, 405.0], [32.1, 405.0], [32.2, 405.0], [32.3, 405.0], [32.4, 405.0], [32.5, 405.0], [32.6, 405.0], [32.7, 406.0], [32.8, 406.0], [32.9, 406.0], [33.0, 406.0], [33.1, 406.0], [33.2, 406.0], [33.3, 406.0], [33.4, 406.0], [33.5, 406.0], [33.6, 406.0], [33.7, 406.0], [33.8, 406.0], [33.9, 406.0], [34.0, 406.0], [34.1, 406.0], [34.2, 406.0], [34.3, 406.0], [34.4, 406.0], [34.5, 406.0], [34.6, 406.0], [34.7, 406.0], [34.8, 407.0], [34.9, 407.0], [35.0, 407.0], [35.1, 407.0], [35.2, 407.0], [35.3, 407.0], [35.4, 407.0], [35.5, 407.0], [35.6, 407.0], [35.7, 407.0], [35.8, 407.0], [35.9, 407.0], [36.0, 407.0], [36.1, 407.0], [36.2, 407.0], [36.3, 407.0], [36.4, 408.0], [36.5, 408.0], [36.6, 408.0], [36.7, 408.0], [36.8, 408.0], [36.9, 408.0], [37.0, 408.0], [37.1, 408.0], [37.2, 408.0], [37.3, 408.0], [37.4, 408.0], [37.5, 408.0], [37.6, 408.0], [37.7, 408.0], [37.8, 408.0], [37.9, 408.0], [38.0, 408.0], [38.1, 408.0], [38.2, 408.0], [38.3, 408.0], [38.4, 408.0], [38.5, 408.0], [38.6, 408.0], [38.7, 409.0], [38.8, 409.0], [38.9, 409.0], [39.0, 409.0], [39.1, 409.0], [39.2, 409.0], [39.3, 409.0], [39.4, 409.0], [39.5, 409.0], [39.6, 409.0], [39.7, 409.0], [39.8, 409.0], [39.9, 409.0], [40.0, 409.0], [40.1, 409.0], [40.2, 409.0], [40.3, 409.0], [40.4, 409.0], [40.5, 409.0], [40.6, 409.0], [40.7, 409.0], [40.8, 409.0], [40.9, 409.0], [41.0, 409.0], [41.1, 409.0], [41.2, 409.0], [41.3, 410.0], [41.4, 410.0], [41.5, 410.0], [41.6, 410.0], [41.7, 410.0], [41.8, 410.0], [41.9, 410.0], [42.0, 410.0], [42.1, 410.0], [42.2, 410.0], [42.3, 410.0], [42.4, 410.0], [42.5, 410.0], [42.6, 410.0], [42.7, 410.0], [42.8, 410.0], [42.9, 411.0], [43.0, 411.0], [43.1, 411.0], [43.2, 411.0], [43.3, 411.0], [43.4, 411.0], [43.5, 411.0], [43.6, 411.0], [43.7, 411.0], [43.8, 411.0], [43.9, 411.0], [44.0, 411.0], [44.1, 411.0], [44.2, 411.0], [44.3, 411.0], [44.4, 411.0], [44.5, 411.0], [44.6, 411.0], [44.7, 411.0], [44.8, 411.0], [44.9, 411.0], [45.0, 411.0], [45.1, 411.0], [45.2, 411.0], [45.3, 411.0], [45.4, 411.0], [45.5, 411.0], [45.6, 411.0], [45.7, 411.0], [45.8, 412.0], [45.9, 412.0], [46.0, 412.0], [46.1, 412.0], [46.2, 412.0], [46.3, 412.0], [46.4, 412.0], [46.5, 412.0], [46.6, 412.0], [46.7, 412.0], [46.8, 412.0], [46.9, 412.0], [47.0, 412.0], [47.1, 412.0], [47.2, 412.0], [47.3, 412.0], [47.4, 412.0], [47.5, 412.0], [47.6, 412.0], [47.7, 412.0], [47.8, 412.0], [47.9, 412.0], [48.0, 412.0], [48.1, 412.0], [48.2, 413.0], [48.3, 413.0], [48.4, 413.0], [48.5, 413.0], [48.6, 413.0], [48.7, 413.0], [48.8, 413.0], [48.9, 413.0], [49.0, 413.0], [49.1, 413.0], [49.2, 413.0], [49.3, 413.0], [49.4, 413.0], [49.5, 413.0], [49.6, 413.0], [49.7, 413.0], [49.8, 413.0], [49.9, 413.0], [50.0, 413.0], [50.1, 413.0], [50.2, 413.0], [50.3, 413.0], [50.4, 413.0], [50.5, 414.0], [50.6, 414.0], [50.7, 414.0], [50.8, 414.0], [50.9, 414.0], [51.0, 414.0], [51.1, 414.0], [51.2, 414.0], [51.3, 414.0], [51.4, 414.0], [51.5, 414.0], [51.6, 414.0], [51.7, 414.0], [51.8, 414.0], [51.9, 414.0], [52.0, 414.0], [52.1, 414.0], [52.2, 414.0], [52.3, 414.0], [52.4, 414.0], [52.5, 414.0], [52.6, 414.0], [52.7, 414.0], [52.8, 414.0], [52.9, 414.0], [53.0, 415.0], [53.1, 415.0], [53.2, 415.0], [53.3, 415.0], [53.4, 415.0], [53.5, 415.0], [53.6, 415.0], [53.7, 415.0], [53.8, 415.0], [53.9, 415.0], [54.0, 415.0], [54.1, 415.0], [54.2, 415.0], [54.3, 415.0], [54.4, 415.0], [54.5, 415.0], [54.6, 415.0], [54.7, 415.0], [54.8, 415.0], [54.9, 415.0], [55.0, 415.0], [55.1, 415.0], [55.2, 415.0], [55.3, 416.0], [55.4, 416.0], [55.5, 416.0], [55.6, 416.0], [55.7, 416.0], [55.8, 416.0], [55.9, 416.0], [56.0, 416.0], [56.1, 416.0], [56.2, 416.0], [56.3, 416.0], [56.4, 416.0], [56.5, 416.0], [56.6, 416.0], [56.7, 416.0], [56.8, 416.0], [56.9, 416.0], [57.0, 416.0], [57.1, 416.0], [57.2, 416.0], [57.3, 416.0], [57.4, 416.0], [57.5, 416.0], [57.6, 416.0], [57.7, 416.0], [57.8, 417.0], [57.9, 417.0], [58.0, 417.0], [58.1, 417.0], [58.2, 417.0], [58.3, 417.0], [58.4, 417.0], [58.5, 417.0], [58.6, 417.0], [58.7, 417.0], [58.8, 417.0], [58.9, 417.0], [59.0, 417.0], [59.1, 417.0], [59.2, 417.0], [59.3, 417.0], [59.4, 417.0], [59.5, 417.0], [59.6, 417.0], [59.7, 417.0], [59.8, 417.0], [59.9, 417.0], [60.0, 417.0], [60.1, 417.0], [60.2, 417.0], [60.3, 417.0], [60.4, 417.0], [60.5, 418.0], [60.6, 418.0], [60.7, 418.0], [60.8, 418.0], [60.9, 418.0], [61.0, 418.0], [61.1, 418.0], [61.2, 418.0], [61.3, 418.0], [61.4, 418.0], [61.5, 418.0], [61.6, 418.0], [61.7, 418.0], [61.8, 418.0], [61.9, 418.0], [62.0, 418.0], [62.1, 418.0], [62.2, 418.0], [62.3, 418.0], [62.4, 418.0], [62.5, 418.0], [62.6, 418.0], [62.7, 418.0], [62.8, 418.0], [62.9, 418.0], [63.0, 418.0], [63.1, 418.0], [63.2, 418.0], [63.3, 418.0], [63.4, 418.0], [63.5, 418.0], [63.6, 418.0], [63.7, 419.0], [63.8, 419.0], [63.9, 419.0], [64.0, 419.0], [64.1, 419.0], [64.2, 419.0], [64.3, 419.0], [64.4, 419.0], [64.5, 419.0], [64.6, 419.0], [64.7, 419.0], [64.8, 419.0], [64.9, 419.0], [65.0, 419.0], [65.1, 419.0], [65.2, 419.0], [65.3, 419.0], [65.4, 419.0], [65.5, 420.0], [65.6, 420.0], [65.7, 420.0], [65.8, 420.0], [65.9, 420.0], [66.0, 420.0], [66.1, 420.0], [66.2, 420.0], [66.3, 420.0], [66.4, 420.0], [66.5, 420.0], [66.6, 420.0], [66.7, 420.0], [66.8, 420.0], [66.9, 420.0], [67.0, 420.0], [67.1, 420.0], [67.2, 420.0], [67.3, 420.0], [67.4, 420.0], [67.5, 420.0], [67.6, 420.0], [67.7, 420.0], [67.8, 420.0], [67.9, 421.0], [68.0, 421.0], [68.1, 421.0], [68.2, 421.0], [68.3, 421.0], [68.4, 421.0], [68.5, 421.0], [68.6, 421.0], [68.7, 421.0], [68.8, 421.0], [68.9, 421.0], [69.0, 421.0], [69.1, 421.0], [69.2, 421.0], [69.3, 421.0], [69.4, 421.0], [69.5, 421.0], [69.6, 421.0], [69.7, 421.0], [69.8, 421.0], [69.9, 421.0], [70.0, 422.0], [70.1, 422.0], [70.2, 422.0], [70.3, 422.0], [70.4, 422.0], [70.5, 422.0], [70.6, 422.0], [70.7, 422.0], [70.8, 422.0], [70.9, 422.0], [71.0, 422.0], [71.1, 422.0], [71.2, 422.0], [71.3, 422.0], [71.4, 422.0], [71.5, 422.0], [71.6, 422.0], [71.7, 422.0], [71.8, 423.0], [71.9, 423.0], [72.0, 423.0], [72.1, 423.0], [72.2, 423.0], [72.3, 423.0], [72.4, 423.0], [72.5, 423.0], [72.6, 423.0], [72.7, 423.0], [72.8, 423.0], [72.9, 423.0], [73.0, 423.0], [73.1, 423.0], [73.2, 423.0], [73.3, 423.0], [73.4, 423.0], [73.5, 423.0], [73.6, 423.0], [73.7, 424.0], [73.8, 424.0], [73.9, 424.0], [74.0, 425.0], [74.1, 425.0], [74.2, 425.0], [74.3, 425.0], [74.4, 425.0], [74.5, 425.0], [74.6, 425.0], [74.7, 425.0], [74.8, 425.0], [74.9, 426.0], [75.0, 426.0], [75.1, 426.0], [75.2, 426.0], [75.3, 426.0], [75.4, 426.0], [75.5, 426.0], [75.6, 426.0], [75.7, 426.0], [75.8, 426.0], [75.9, 426.0], [76.0, 426.0], [76.1, 426.0], [76.2, 426.0], [76.3, 426.0], [76.4, 427.0], [76.5, 427.0], [76.6, 427.0], [76.7, 427.0], [76.8, 427.0], [76.9, 427.0], [77.0, 427.0], [77.1, 427.0], [77.2, 427.0], [77.3, 427.0], [77.4, 427.0], [77.5, 427.0], [77.6, 427.0], [77.7, 427.0], [77.8, 427.0], [77.9, 427.0], [78.0, 427.0], [78.1, 427.0], [78.2, 427.0], [78.3, 427.0], [78.4, 427.0], [78.5, 428.0], [78.6, 428.0], [78.7, 428.0], [78.8, 428.0], [78.9, 428.0], [79.0, 428.0], [79.1, 428.0], [79.2, 428.0], [79.3, 428.0], [79.4, 428.0], [79.5, 428.0], [79.6, 428.0], [79.7, 428.0], [79.8, 429.0], [79.9, 429.0], [80.0, 429.0], [80.1, 429.0], [80.2, 429.0], [80.3, 429.0], [80.4, 429.0], [80.5, 429.0], [80.6, 429.0], [80.7, 429.0], [80.8, 429.0], [80.9, 429.0], [81.0, 429.0], [81.1, 429.0], [81.2, 429.0], [81.3, 429.0], [81.4, 429.0], [81.5, 430.0], [81.6, 430.0], [81.7, 430.0], [81.8, 430.0], [81.9, 430.0], [82.0, 430.0], [82.1, 430.0], [82.2, 430.0], [82.3, 430.0], [82.4, 430.0], [82.5, 430.0], [82.6, 430.0], [82.7, 430.0], [82.8, 430.0], [82.9, 431.0], [83.0, 431.0], [83.1, 431.0], [83.2, 431.0], [83.3, 431.0], [83.4, 431.0], [83.5, 431.0], [83.6, 431.0], [83.7, 431.0], [83.8, 431.0], [83.9, 431.0], [84.0, 431.0], [84.1, 431.0], [84.2, 432.0], [84.3, 432.0], [84.4, 432.0], [84.5, 432.0], [84.6, 432.0], [84.7, 432.0], [84.8, 432.0], [84.9, 432.0], [85.0, 432.0], [85.1, 432.0], [85.2, 432.0], [85.3, 432.0], [85.4, 432.0], [85.5, 432.0], [85.6, 432.0], [85.7, 433.0], [85.8, 433.0], [85.9, 433.0], [86.0, 433.0], [86.1, 433.0], [86.2, 433.0], [86.3, 434.0], [86.4, 434.0], [86.5, 434.0], [86.6, 434.0], [86.7, 434.0], [86.8, 434.0], [86.9, 434.0], [87.0, 434.0], [87.1, 434.0], [87.2, 434.0], [87.3, 434.0], [87.4, 434.0], [87.5, 434.0], [87.6, 434.0], [87.7, 434.0], [87.8, 435.0], [87.9, 435.0], [88.0, 435.0], [88.1, 435.0], [88.2, 435.0], [88.3, 435.0], [88.4, 436.0], [88.5, 436.0], [88.6, 436.0], [88.7, 436.0], [88.8, 436.0], [88.9, 437.0], [89.0, 437.0], [89.1, 437.0], [89.2, 437.0], [89.3, 437.0], [89.4, 437.0], [89.5, 437.0], [89.6, 437.0], [89.7, 437.0], [89.8, 437.0], [89.9, 437.0], [90.0, 438.0], [90.1, 438.0], [90.2, 438.0], [90.3, 438.0], [90.4, 438.0], [90.5, 438.0], [90.6, 438.0], [90.7, 438.0], [90.8, 438.0], [90.9, 438.0], [91.0, 438.0], [91.1, 438.0], [91.2, 439.0], [91.3, 439.0], [91.4, 439.0], [91.5, 439.0], [91.6, 439.0], [91.7, 439.0], [91.8, 440.0], [91.9, 440.0], [92.0, 440.0], [92.1, 440.0], [92.2, 440.0], [92.3, 441.0], [92.4, 441.0], [92.5, 441.0], [92.6, 441.0], [92.7, 441.0], [92.8, 441.0], [92.9, 441.0], [93.0, 441.0], [93.1, 441.0], [93.2, 441.0], [93.3, 441.0], [93.4, 441.0], [93.5, 442.0], [93.6, 442.0], [93.7, 442.0], [93.8, 442.0], [93.9, 442.0], [94.0, 443.0], [94.1, 443.0], [94.2, 443.0], [94.3, 443.0], [94.4, 443.0], [94.5, 444.0], [94.6, 444.0], [94.7, 444.0], [94.8, 444.0], [94.9, 444.0], [95.0, 445.0], [95.1, 445.0], [95.2, 445.0], [95.3, 445.0], [95.4, 446.0], [95.5, 446.0], [95.6, 446.0], [95.7, 446.0], [95.8, 446.0], [95.9, 448.0], [96.0, 449.0], [96.1, 449.0], [96.2, 449.0], [96.3, 450.0], [96.4, 450.0], [96.5, 450.0], [96.6, 450.0], [96.7, 451.0], [96.8, 452.0], [96.9, 454.0], [97.0, 455.0], [97.1, 455.0], [97.2, 456.0], [97.3, 459.0], [97.4, 461.0], [97.5, 463.0], [97.6, 463.0], [97.7, 464.0], [97.8, 466.0], [97.9, 469.0], [98.0, 469.0], [98.1, 469.0], [98.2, 471.0], [98.3, 472.0], [98.4, 473.0], [98.5, 475.0], [98.6, 475.0], [98.7, 475.0], [98.8, 482.0], [98.9, 483.0], [99.0, 488.0], [99.1, 488.0], [99.2, 502.0], [99.3, 507.0], [99.4, 514.0], [99.5, 531.0], [99.6, 531.0], [99.7, 549.0], [99.8, 639.0], [99.9, 852.0]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php", "isController": false}, {"data": [[0.0, 269.0], [0.1, 269.0], [0.2, 278.0], [0.3, 279.0], [0.4, 280.0], [0.5, 280.0], [0.6, 280.0], [0.7, 281.0], [0.8, 281.0], [0.9, 281.0], [1.0, 283.0], [1.1, 283.0], [1.2, 283.0], [1.3, 283.0], [1.4, 284.0], [1.5, 284.0], [1.6, 284.0], [1.7, 284.0], [1.8, 284.0], [1.9, 284.0], [2.0, 284.0], [2.1, 284.0], [2.2, 285.0], [2.3, 285.0], [2.4, 286.0], [2.5, 286.0], [2.6, 286.0], [2.7, 287.0], [2.8, 287.0], [2.9, 287.0], [3.0, 288.0], [3.1, 288.0], [3.2, 289.0], [3.3, 291.0], [3.4, 294.0], [3.5, 296.0], [3.6, 296.0], [3.7, 296.0], [3.8, 299.0], [3.9, 299.0], [4.0, 301.0], [4.1, 301.0], [4.2, 301.0], [4.3, 303.0], [4.4, 303.0], [4.5, 303.0], [4.6, 303.0], [4.7, 307.0], [4.8, 312.0], [4.9, 348.0], [5.0, 353.0], [5.1, 353.0], [5.2, 355.0], [5.3, 355.0], [5.4, 363.0], [5.5, 363.0], [5.6, 363.0], [5.7, 366.0], [5.8, 366.0], [5.9, 367.0], [6.0, 367.0], [6.1, 367.0], [6.2, 367.0], [6.3, 369.0], [6.4, 370.0], [6.5, 372.0], [6.6, 372.0], [6.7, 373.0], [6.8, 373.0], [6.9, 373.0], [7.0, 374.0], [7.1, 374.0], [7.2, 374.0], [7.3, 375.0], [7.4, 375.0], [7.5, 375.0], [7.6, 375.0], [7.7, 376.0], [7.8, 376.0], [7.9, 376.0], [8.0, 376.0], [8.1, 376.0], [8.2, 377.0], [8.3, 377.0], [8.4, 377.0], [8.5, 377.0], [8.6, 377.0], [8.7, 377.0], [8.8, 378.0], [8.9, 378.0], [9.0, 378.0], [9.1, 378.0], [9.2, 379.0], [9.3, 379.0], [9.4, 379.0], [9.5, 379.0], [9.6, 379.0], [9.7, 380.0], [9.8, 380.0], [9.9, 380.0], [10.0, 380.0], [10.1, 380.0], [10.2, 380.0], [10.3, 380.0], [10.4, 381.0], [10.5, 381.0], [10.6, 381.0], [10.7, 382.0], [10.8, 382.0], [10.9, 382.0], [11.0, 384.0], [11.1, 384.0], [11.2, 384.0], [11.3, 384.0], [11.4, 385.0], [11.5, 385.0], [11.6, 385.0], [11.7, 385.0], [11.8, 385.0], [11.9, 385.0], [12.0, 385.0], [12.1, 385.0], [12.2, 386.0], [12.3, 386.0], [12.4, 386.0], [12.5, 386.0], [12.6, 386.0], [12.7, 386.0], [12.8, 386.0], [12.9, 386.0], [13.0, 387.0], [13.1, 387.0], [13.2, 387.0], [13.3, 387.0], [13.4, 387.0], [13.5, 387.0], [13.6, 387.0], [13.7, 387.0], [13.8, 387.0], [13.9, 387.0], [14.0, 387.0], [14.1, 387.0], [14.2, 388.0], [14.3, 388.0], [14.4, 388.0], [14.5, 388.0], [14.6, 388.0], [14.7, 388.0], [14.8, 389.0], [14.9, 389.0], [15.0, 389.0], [15.1, 389.0], [15.2, 389.0], [15.3, 390.0], [15.4, 390.0], [15.5, 390.0], [15.6, 390.0], [15.7, 390.0], [15.8, 390.0], [15.9, 391.0], [16.0, 391.0], [16.1, 391.0], [16.2, 391.0], [16.3, 391.0], [16.4, 392.0], [16.5, 392.0], [16.6, 392.0], [16.7, 392.0], [16.8, 392.0], [16.9, 392.0], [17.0, 392.0], [17.1, 392.0], [17.2, 393.0], [17.3, 393.0], [17.4, 393.0], [17.5, 393.0], [17.6, 393.0], [17.7, 393.0], [17.8, 393.0], [17.9, 393.0], [18.0, 393.0], [18.1, 393.0], [18.2, 394.0], [18.3, 394.0], [18.4, 394.0], [18.5, 394.0], [18.6, 394.0], [18.7, 394.0], [18.8, 394.0], [18.9, 394.0], [19.0, 395.0], [19.1, 395.0], [19.2, 395.0], [19.3, 395.0], [19.4, 395.0], [19.5, 395.0], [19.6, 395.0], [19.7, 395.0], [19.8, 395.0], [19.9, 395.0], [20.0, 396.0], [20.1, 396.0], [20.2, 397.0], [20.3, 397.0], [20.4, 397.0], [20.5, 398.0], [20.6, 398.0], [20.7, 398.0], [20.8, 398.0], [20.9, 398.0], [21.0, 398.0], [21.1, 398.0], [21.2, 398.0], [21.3, 398.0], [21.4, 398.0], [21.5, 398.0], [21.6, 398.0], [21.7, 399.0], [21.8, 399.0], [21.9, 399.0], [22.0, 399.0], [22.1, 399.0], [22.2, 399.0], [22.3, 399.0], [22.4, 399.0], [22.5, 399.0], [22.6, 399.0], [22.7, 399.0], [22.8, 400.0], [22.9, 400.0], [23.0, 400.0], [23.1, 400.0], [23.2, 400.0], [23.3, 400.0], [23.4, 401.0], [23.5, 401.0], [23.6, 401.0], [23.7, 401.0], [23.8, 401.0], [23.9, 401.0], [24.0, 401.0], [24.1, 401.0], [24.2, 401.0], [24.3, 401.0], [24.4, 401.0], [24.5, 402.0], [24.6, 402.0], [24.7, 402.0], [24.8, 402.0], [24.9, 402.0], [25.0, 402.0], [25.1, 402.0], [25.2, 402.0], [25.3, 402.0], [25.4, 402.0], [25.5, 402.0], [25.6, 402.0], [25.7, 402.0], [25.8, 403.0], [25.9, 403.0], [26.0, 403.0], [26.1, 403.0], [26.2, 403.0], [26.3, 403.0], [26.4, 403.0], [26.5, 404.0], [26.6, 404.0], [26.7, 404.0], [26.8, 404.0], [26.9, 404.0], [27.0, 404.0], [27.1, 404.0], [27.2, 404.0], [27.3, 404.0], [27.4, 405.0], [27.5, 405.0], [27.6, 405.0], [27.7, 405.0], [27.8, 405.0], [27.9, 405.0], [28.0, 405.0], [28.1, 405.0], [28.2, 405.0], [28.3, 405.0], [28.4, 405.0], [28.5, 405.0], [28.6, 405.0], [28.7, 405.0], [28.8, 406.0], [28.9, 406.0], [29.0, 406.0], [29.1, 406.0], [29.2, 406.0], [29.3, 406.0], [29.4, 406.0], [29.5, 406.0], [29.6, 406.0], [29.7, 406.0], [29.8, 406.0], [29.9, 407.0], [30.0, 407.0], [30.1, 407.0], [30.2, 407.0], [30.3, 407.0], [30.4, 407.0], [30.5, 407.0], [30.6, 407.0], [30.7, 407.0], [30.8, 407.0], [30.9, 407.0], [31.0, 407.0], [31.1, 407.0], [31.2, 407.0], [31.3, 407.0], [31.4, 407.0], [31.5, 407.0], [31.6, 407.0], [31.7, 407.0], [31.8, 408.0], [31.9, 408.0], [32.0, 408.0], [32.1, 408.0], [32.2, 408.0], [32.3, 408.0], [32.4, 408.0], [32.5, 408.0], [32.6, 408.0], [32.7, 409.0], [32.8, 409.0], [32.9, 409.0], [33.0, 409.0], [33.1, 409.0], [33.2, 409.0], [33.3, 409.0], [33.4, 409.0], [33.5, 409.0], [33.6, 409.0], [33.7, 409.0], [33.8, 409.0], [33.9, 409.0], [34.0, 409.0], [34.1, 409.0], [34.2, 409.0], [34.3, 410.0], [34.4, 410.0], [34.5, 410.0], [34.6, 410.0], [34.7, 410.0], [34.8, 410.0], [34.9, 410.0], [35.0, 410.0], [35.1, 410.0], [35.2, 410.0], [35.3, 410.0], [35.4, 410.0], [35.5, 410.0], [35.6, 410.0], [35.7, 411.0], [35.8, 411.0], [35.9, 411.0], [36.0, 411.0], [36.1, 411.0], [36.2, 411.0], [36.3, 411.0], [36.4, 411.0], [36.5, 411.0], [36.6, 411.0], [36.7, 411.0], [36.8, 411.0], [36.9, 412.0], [37.0, 412.0], [37.1, 412.0], [37.2, 412.0], [37.3, 412.0], [37.4, 412.0], [37.5, 412.0], [37.6, 412.0], [37.7, 412.0], [37.8, 412.0], [37.9, 412.0], [38.0, 412.0], [38.1, 412.0], [38.2, 412.0], [38.3, 412.0], [38.4, 412.0], [38.5, 412.0], [38.6, 412.0], [38.7, 412.0], [38.8, 412.0], [38.9, 412.0], [39.0, 412.0], [39.1, 412.0], [39.2, 412.0], [39.3, 412.0], [39.4, 412.0], [39.5, 413.0], [39.6, 413.0], [39.7, 413.0], [39.8, 413.0], [39.9, 413.0], [40.0, 413.0], [40.1, 413.0], [40.2, 413.0], [40.3, 413.0], [40.4, 413.0], [40.5, 413.0], [40.6, 413.0], [40.7, 413.0], [40.8, 413.0], [40.9, 413.0], [41.0, 413.0], [41.1, 413.0], [41.2, 413.0], [41.3, 413.0], [41.4, 413.0], [41.5, 413.0], [41.6, 413.0], [41.7, 413.0], [41.8, 414.0], [41.9, 414.0], [42.0, 414.0], [42.1, 414.0], [42.2, 414.0], [42.3, 414.0], [42.4, 414.0], [42.5, 414.0], [42.6, 414.0], [42.7, 414.0], [42.8, 414.0], [42.9, 414.0], [43.0, 414.0], [43.1, 414.0], [43.2, 414.0], [43.3, 414.0], [43.4, 415.0], [43.5, 415.0], [43.6, 415.0], [43.7, 415.0], [43.8, 415.0], [43.9, 415.0], [44.0, 415.0], [44.1, 415.0], [44.2, 415.0], [44.3, 415.0], [44.4, 415.0], [44.5, 415.0], [44.6, 415.0], [44.7, 415.0], [44.8, 416.0], [44.9, 416.0], [45.0, 416.0], [45.1, 416.0], [45.2, 416.0], [45.3, 416.0], [45.4, 416.0], [45.5, 416.0], [45.6, 416.0], [45.7, 416.0], [45.8, 416.0], [45.9, 416.0], [46.0, 416.0], [46.1, 416.0], [46.2, 416.0], [46.3, 416.0], [46.4, 416.0], [46.5, 416.0], [46.6, 416.0], [46.7, 416.0], [46.8, 416.0], [46.9, 416.0], [47.0, 417.0], [47.1, 417.0], [47.2, 417.0], [47.3, 417.0], [47.4, 417.0], [47.5, 417.0], [47.6, 417.0], [47.7, 417.0], [47.8, 417.0], [47.9, 417.0], [48.0, 417.0], [48.1, 417.0], [48.2, 417.0], [48.3, 417.0], [48.4, 418.0], [48.5, 418.0], [48.6, 418.0], [48.7, 418.0], [48.8, 418.0], [48.9, 418.0], [49.0, 418.0], [49.1, 418.0], [49.2, 418.0], [49.3, 418.0], [49.4, 418.0], [49.5, 418.0], [49.6, 418.0], [49.7, 418.0], [49.8, 418.0], [49.9, 419.0], [50.0, 419.0], [50.1, 419.0], [50.2, 419.0], [50.3, 419.0], [50.4, 419.0], [50.5, 419.0], [50.6, 419.0], [50.7, 419.0], [50.8, 419.0], [50.9, 419.0], [51.0, 419.0], [51.1, 419.0], [51.2, 419.0], [51.3, 419.0], [51.4, 419.0], [51.5, 419.0], [51.6, 419.0], [51.7, 419.0], [51.8, 419.0], [51.9, 419.0], [52.0, 420.0], [52.1, 420.0], [52.2, 420.0], [52.3, 420.0], [52.4, 420.0], [52.5, 420.0], [52.6, 420.0], [52.7, 420.0], [52.8, 420.0], [52.9, 420.0], [53.0, 420.0], [53.1, 420.0], [53.2, 420.0], [53.3, 420.0], [53.4, 420.0], [53.5, 420.0], [53.6, 420.0], [53.7, 420.0], [53.8, 420.0], [53.9, 420.0], [54.0, 420.0], [54.1, 420.0], [54.2, 420.0], [54.3, 420.0], [54.4, 420.0], [54.5, 420.0], [54.6, 420.0], [54.7, 420.0], [54.8, 421.0], [54.9, 421.0], [55.0, 421.0], [55.1, 421.0], [55.2, 421.0], [55.3, 421.0], [55.4, 421.0], [55.5, 421.0], [55.6, 421.0], [55.7, 421.0], [55.8, 421.0], [55.9, 421.0], [56.0, 421.0], [56.1, 421.0], [56.2, 421.0], [56.3, 421.0], [56.4, 421.0], [56.5, 421.0], [56.6, 421.0], [56.7, 421.0], [56.8, 421.0], [56.9, 421.0], [57.0, 422.0], [57.1, 422.0], [57.2, 422.0], [57.3, 422.0], [57.4, 422.0], [57.5, 422.0], [57.6, 422.0], [57.7, 422.0], [57.8, 422.0], [57.9, 422.0], [58.0, 422.0], [58.1, 422.0], [58.2, 422.0], [58.3, 422.0], [58.4, 422.0], [58.5, 422.0], [58.6, 422.0], [58.7, 422.0], [58.8, 422.0], [58.9, 422.0], [59.0, 422.0], [59.1, 422.0], [59.2, 422.0], [59.3, 423.0], [59.4, 423.0], [59.5, 423.0], [59.6, 423.0], [59.7, 423.0], [59.8, 423.0], [59.9, 423.0], [60.0, 423.0], [60.1, 423.0], [60.2, 423.0], [60.3, 423.0], [60.4, 423.0], [60.5, 423.0], [60.6, 423.0], [60.7, 424.0], [60.8, 424.0], [60.9, 424.0], [61.0, 424.0], [61.1, 424.0], [61.2, 424.0], [61.3, 424.0], [61.4, 424.0], [61.5, 424.0], [61.6, 424.0], [61.7, 424.0], [61.8, 424.0], [61.9, 424.0], [62.0, 424.0], [62.1, 424.0], [62.2, 424.0], [62.3, 425.0], [62.4, 425.0], [62.5, 425.0], [62.6, 425.0], [62.7, 425.0], [62.8, 425.0], [62.9, 425.0], [63.0, 425.0], [63.1, 425.0], [63.2, 425.0], [63.3, 425.0], [63.4, 425.0], [63.5, 425.0], [63.6, 425.0], [63.7, 425.0], [63.8, 425.0], [63.9, 425.0], [64.0, 425.0], [64.1, 425.0], [64.2, 425.0], [64.3, 425.0], [64.4, 425.0], [64.5, 426.0], [64.6, 426.0], [64.7, 426.0], [64.8, 426.0], [64.9, 426.0], [65.0, 426.0], [65.1, 426.0], [65.2, 426.0], [65.3, 426.0], [65.4, 426.0], [65.5, 426.0], [65.6, 426.0], [65.7, 426.0], [65.8, 426.0], [65.9, 426.0], [66.0, 426.0], [66.1, 426.0], [66.2, 426.0], [66.3, 426.0], [66.4, 426.0], [66.5, 426.0], [66.6, 426.0], [66.7, 427.0], [66.8, 427.0], [66.9, 427.0], [67.0, 427.0], [67.1, 427.0], [67.2, 427.0], [67.3, 427.0], [67.4, 427.0], [67.5, 427.0], [67.6, 427.0], [67.7, 427.0], [67.8, 427.0], [67.9, 427.0], [68.0, 427.0], [68.1, 427.0], [68.2, 427.0], [68.3, 427.0], [68.4, 427.0], [68.5, 427.0], [68.6, 427.0], [68.7, 427.0], [68.8, 428.0], [68.9, 428.0], [69.0, 428.0], [69.1, 428.0], [69.2, 428.0], [69.3, 428.0], [69.4, 428.0], [69.5, 428.0], [69.6, 428.0], [69.7, 428.0], [69.8, 428.0], [69.9, 428.0], [70.0, 428.0], [70.1, 428.0], [70.2, 428.0], [70.3, 428.0], [70.4, 429.0], [70.5, 429.0], [70.6, 429.0], [70.7, 429.0], [70.8, 429.0], [70.9, 429.0], [71.0, 429.0], [71.1, 429.0], [71.2, 429.0], [71.3, 429.0], [71.4, 429.0], [71.5, 429.0], [71.6, 429.0], [71.7, 429.0], [71.8, 429.0], [71.9, 429.0], [72.0, 430.0], [72.1, 430.0], [72.2, 430.0], [72.3, 430.0], [72.4, 430.0], [72.5, 430.0], [72.6, 430.0], [72.7, 430.0], [72.8, 430.0], [72.9, 430.0], [73.0, 430.0], [73.1, 430.0], [73.2, 430.0], [73.3, 431.0], [73.4, 431.0], [73.5, 431.0], [73.6, 431.0], [73.7, 431.0], [73.8, 431.0], [73.9, 431.0], [74.0, 431.0], [74.1, 431.0], [74.2, 431.0], [74.3, 431.0], [74.4, 431.0], [74.5, 431.0], [74.6, 431.0], [74.7, 431.0], [74.8, 431.0], [74.9, 431.0], [75.0, 431.0], [75.1, 431.0], [75.2, 432.0], [75.3, 432.0], [75.4, 432.0], [75.5, 432.0], [75.6, 432.0], [75.7, 432.0], [75.8, 432.0], [75.9, 432.0], [76.0, 432.0], [76.1, 432.0], [76.2, 432.0], [76.3, 433.0], [76.4, 433.0], [76.5, 433.0], [76.6, 433.0], [76.7, 433.0], [76.8, 433.0], [76.9, 433.0], [77.0, 433.0], [77.1, 433.0], [77.2, 433.0], [77.3, 433.0], [77.4, 433.0], [77.5, 433.0], [77.6, 433.0], [77.7, 433.0], [77.8, 434.0], [77.9, 434.0], [78.0, 434.0], [78.1, 434.0], [78.2, 434.0], [78.3, 434.0], [78.4, 434.0], [78.5, 434.0], [78.6, 434.0], [78.7, 434.0], [78.8, 434.0], [78.9, 434.0], [79.0, 434.0], [79.1, 434.0], [79.2, 435.0], [79.3, 435.0], [79.4, 435.0], [79.5, 435.0], [79.6, 435.0], [79.7, 435.0], [79.8, 435.0], [79.9, 435.0], [80.0, 435.0], [80.1, 435.0], [80.2, 436.0], [80.3, 436.0], [80.4, 436.0], [80.5, 436.0], [80.6, 436.0], [80.7, 436.0], [80.8, 436.0], [80.9, 436.0], [81.0, 436.0], [81.1, 436.0], [81.2, 436.0], [81.3, 436.0], [81.4, 436.0], [81.5, 436.0], [81.6, 436.0], [81.7, 436.0], [81.8, 436.0], [81.9, 436.0], [82.0, 437.0], [82.1, 437.0], [82.2, 437.0], [82.3, 437.0], [82.4, 437.0], [82.5, 437.0], [82.6, 437.0], [82.7, 437.0], [82.8, 437.0], [82.9, 438.0], [83.0, 438.0], [83.1, 438.0], [83.2, 439.0], [83.3, 439.0], [83.4, 439.0], [83.5, 439.0], [83.6, 439.0], [83.7, 439.0], [83.8, 439.0], [83.9, 440.0], [84.0, 440.0], [84.1, 440.0], [84.2, 440.0], [84.3, 440.0], [84.4, 440.0], [84.5, 440.0], [84.6, 440.0], [84.7, 440.0], [84.8, 441.0], [84.9, 441.0], [85.0, 441.0], [85.1, 441.0], [85.2, 441.0], [85.3, 441.0], [85.4, 441.0], [85.5, 441.0], [85.6, 441.0], [85.7, 441.0], [85.8, 442.0], [85.9, 442.0], [86.0, 442.0], [86.1, 442.0], [86.2, 442.0], [86.3, 442.0], [86.4, 442.0], [86.5, 443.0], [86.6, 443.0], [86.7, 443.0], [86.8, 443.0], [86.9, 443.0], [87.0, 443.0], [87.1, 443.0], [87.2, 443.0], [87.3, 443.0], [87.4, 443.0], [87.5, 443.0], [87.6, 443.0], [87.7, 443.0], [87.8, 444.0], [87.9, 444.0], [88.0, 444.0], [88.1, 444.0], [88.2, 444.0], [88.3, 444.0], [88.4, 445.0], [88.5, 445.0], [88.6, 445.0], [88.7, 445.0], [88.8, 446.0], [88.9, 446.0], [89.0, 446.0], [89.1, 446.0], [89.2, 446.0], [89.3, 446.0], [89.4, 446.0], [89.5, 446.0], [89.6, 446.0], [89.7, 447.0], [89.8, 447.0], [89.9, 447.0], [90.0, 447.0], [90.1, 447.0], [90.2, 447.0], [90.3, 448.0], [90.4, 448.0], [90.5, 449.0], [90.6, 449.0], [90.7, 449.0], [90.8, 450.0], [90.9, 450.0], [91.0, 450.0], [91.1, 450.0], [91.2, 450.0], [91.3, 450.0], [91.4, 451.0], [91.5, 452.0], [91.6, 452.0], [91.7, 452.0], [91.8, 452.0], [91.9, 453.0], [92.0, 453.0], [92.1, 453.0], [92.2, 453.0], [92.3, 453.0], [92.4, 454.0], [92.5, 454.0], [92.6, 454.0], [92.7, 454.0], [92.8, 454.0], [92.9, 455.0], [93.0, 455.0], [93.1, 455.0], [93.2, 455.0], [93.3, 455.0], [93.4, 457.0], [93.5, 458.0], [93.6, 458.0], [93.7, 459.0], [93.8, 459.0], [93.9, 460.0], [94.0, 460.0], [94.1, 460.0], [94.2, 460.0], [94.3, 461.0], [94.4, 461.0], [94.5, 461.0], [94.6, 461.0], [94.7, 461.0], [94.8, 462.0], [94.9, 463.0], [95.0, 464.0], [95.1, 464.0], [95.2, 465.0], [95.3, 466.0], [95.4, 466.0], [95.5, 467.0], [95.6, 467.0], [95.7, 468.0], [95.8, 469.0], [95.9, 470.0], [96.0, 470.0], [96.1, 470.0], [96.2, 470.0], [96.3, 472.0], [96.4, 472.0], [96.5, 473.0], [96.6, 473.0], [96.7, 474.0], [96.8, 475.0], [96.9, 477.0], [97.0, 477.0], [97.1, 477.0], [97.2, 479.0], [97.3, 482.0], [97.4, 483.0], [97.5, 489.0], [97.6, 489.0], [97.7, 490.0], [97.8, 492.0], [97.9, 494.0], [98.0, 497.0], [98.1, 497.0], [98.2, 498.0], [98.3, 499.0], [98.4, 504.0], [98.5, 509.0], [98.6, 509.0], [98.7, 511.0], [98.8, 517.0], [98.9, 517.0], [99.0, 520.0], [99.1, 520.0], [99.2, 523.0], [99.3, 535.0], [99.4, 544.0], [99.5, 560.0], [99.6, 560.0], [99.7, 570.0], [99.8, 1254.0], [99.9, 1342.0]], "isOverall": false, "label": "https://blazedemo.com/reserve.php", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 615.0, "series": [{"data": [[1100.0, 1.0], [300.0, 7.0], [600.0, 17.0], [700.0, 2.0], [400.0, 159.0], [1900.0, 1.0], [2000.0, 2.0], [500.0, 611.0]], "isOverall": false, "label": "https://blazedemo.com/", "isController": false}, {"data": [[300.0, 153.0], [200.0, 23.0], [400.0, 611.0], [500.0, 13.0]], "isOverall": false, "label": "https://blazedemo.com/purchase.php", "isController": false}, {"data": [[2100.0, 1.0], [2500.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 3.0], [1500.0, 25.0], [1600.0, 94.0], [1700.0, 482.0], [1800.0, 168.0], [1900.0, 14.0], [2000.0, 4.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[300.0, 163.0], [600.0, 1.0], [200.0, 15.0], [400.0, 615.0], [800.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php", "isController": false}, {"data": [[300.0, 150.0], [1200.0, 1.0], [1300.0, 1.0], [200.0, 32.0], [400.0, 605.0], [500.0, 11.0]], "isOverall": false, "label": "https://blazedemo.com/reserve.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2412.0, "series": [{"data": [[0.0, 2412.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 654.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 131.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.74444636E12, "maxY": 80.9376558603491, "series": [{"data": [[1.74444648E12, 80.90863579474339], [1.74444666E12, 69.76325088339232], [1.74444636E12, 53.94915254237288], [1.74444654E12, 80.9376558603491], [1.74444642E12, 80.77974683544312], [1.74444672E12, 5.0], [1.7444466E12, 80.90977443609023]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74444672E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 278.0, "minX": 1.0, "maxY": 3096.0, "series": [{"data": [[7.0, 1310.6], [8.0, 1191.0], [9.0, 398.0], [10.0, 505.0], [11.0, 404.0], [12.0, 437.0], [13.0, 405.0], [14.0, 430.0], [15.0, 559.0], [16.0, 421.0], [17.0, 402.0], [18.0, 589.0], [19.0, 436.0], [20.0, 407.0], [21.0, 404.0], [22.0, 407.0], [23.0, 555.0], [24.0, 410.0], [25.0, 404.0], [26.0, 594.0], [27.0, 396.0], [28.0, 609.0], [29.0, 394.0], [30.0, 646.0], [31.0, 551.0], [32.0, 541.0], [33.0, 585.0], [34.0, 412.0], [35.0, 538.0], [36.0, 551.0], [37.0, 613.0], [38.0, 568.0], [39.0, 568.0], [40.0, 429.0], [41.0, 504.0], [42.0, 613.0], [43.0, 528.0], [44.0, 522.0], [45.0, 604.0], [46.0, 468.0], [47.0, 430.0], [48.0, 525.0], [49.0, 485.0], [50.0, 605.0], [51.0, 546.0], [52.0, 401.0], [53.0, 521.0], [54.0, 406.0], [55.0, 549.0], [56.0, 570.0], [57.0, 414.0], [58.0, 498.0], [59.0, 572.0], [60.0, 501.0], [61.0, 525.0], [62.0, 400.0], [63.0, 595.0], [64.0, 596.0], [65.0, 590.0], [66.0, 393.0], [67.0, 551.0], [68.0, 394.0], [69.0, 531.0], [70.0, 558.0], [71.0, 524.0], [72.0, 530.0], [73.0, 548.0], [74.0, 532.0], [75.0, 400.0], [76.0, 494.0], [77.0, 404.0], [78.0, 509.0], [79.0, 546.3333333333334], [80.0, 532.0704225352115], [81.0, 517.6750788643529], [82.0, 515.9999999999999], [83.0, 554.0], [84.0, 494.6666666666667]], "isOverall": false, "label": "https://blazedemo.com/", "isController": false}, {"data": [[77.00500000000004, 523.9687499999998]], "isOverall": false, "label": "https://blazedemo.com/-Aggregated", "isController": false}, {"data": [[32.0, 401.0], [33.0, 469.0], [34.0, 472.0], [35.0, 392.0], [36.0, 357.0], [37.0, 430.0], [38.0, 303.0], [40.0, 284.5], [41.0, 409.0], [43.0, 286.0], [44.0, 422.0], [46.0, 336.5], [48.0, 299.5], [49.0, 287.0], [51.0, 453.0], [53.0, 374.5], [55.0, 351.5], [56.0, 359.25], [58.0, 466.0], [59.0, 493.0], [60.0, 352.5], [61.0, 405.5], [62.0, 348.0], [63.0, 464.5], [64.0, 416.5], [65.0, 356.5], [66.0, 393.5], [67.0, 420.5], [68.0, 404.5], [69.0, 432.0], [71.0, 402.8], [70.0, 385.0], [73.0, 464.0], [75.0, 421.0], [74.0, 403.0], [76.0, 395.5], [77.0, 423.0], [78.0, 424.3333333333333], [79.0, 431.25], [80.0, 421.2663043478262], [81.0, 410.7428571428571], [83.0, 536.0], [82.0, 395.4285714285714], [84.0, 430.0], [85.0, 447.0], [31.0, 284.0]], "isOverall": false, "label": "https://blazedemo.com/purchase.php", "isController": false}, {"data": [[78.48874999999998, 411.8874999999998]], "isOverall": false, "label": "https://blazedemo.com/purchase.php-Aggregated", "isController": false}, {"data": [[2.0, 1724.0], [3.0, 1859.0], [4.0, 1779.0], [5.0, 1812.0], [6.0, 1804.0], [7.0, 1815.0], [8.0, 1732.0], [9.0, 1794.0], [10.0, 1692.0], [11.0, 1780.0], [12.0, 1689.0], [13.0, 1805.0], [14.0, 1809.0], [15.0, 1780.0], [16.0, 1738.0], [17.0, 1730.0], [18.0, 1827.0], [19.0, 1848.0], [20.0, 1809.0], [21.0, 1769.0], [22.0, 1730.0], [23.0, 1760.0], [24.0, 1687.0], [25.0, 1801.0], [26.0, 1746.0], [27.0, 1773.0], [28.0, 1778.0], [29.0, 1782.0], [30.0, 1801.0], [31.0, 1814.0], [33.0, 1757.0], [32.0, 1736.0], [35.0, 1768.0], [34.0, 1766.0], [37.0, 1746.0], [36.0, 1734.0], [39.0, 1738.0], [38.0, 1737.0], [41.0, 1744.0], [40.0, 1719.0], [43.0, 1787.0], [42.0, 1793.0], [45.0, 1713.0], [44.0, 1759.0], [47.0, 1765.0], [46.0, 1790.0], [49.0, 1778.0], [48.0, 1800.0], [51.0, 1680.0], [50.0, 1710.0], [53.0, 1680.0], [52.0, 1719.0], [55.0, 1764.0], [54.0, 1710.0], [57.0, 1697.0], [56.0, 1772.0], [59.0, 1793.0], [58.0, 1731.0], [61.0, 1809.0], [60.0, 1798.0], [63.0, 1771.0], [62.0, 1699.0], [67.0, 1842.0], [66.0, 1798.0], [65.0, 1743.0], [64.0, 1869.0], [71.0, 1826.0], [70.0, 1798.0], [69.0, 1734.0], [68.0, 1780.0], [75.0, 1712.0], [74.0, 1728.0], [73.0, 1799.0], [72.0, 1772.0], [79.0, 1796.0], [78.0, 1743.0], [77.0, 1750.0], [76.0, 1749.0], [83.0, 3096.0], [82.0, 1875.730158730159], [81.0, 1752.7394695787832], [80.0, 1501.3846153846155], [85.0, 2048.0], [84.0, 2605.5], [1.0, 1727.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[77.02874999999989, 1763.6824999999994]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 398.0], [3.0, 469.0], [4.0, 418.0], [5.0, 411.0], [6.0, 441.0], [7.0, 416.0], [8.0, 405.0], [9.0, 415.0], [10.0, 387.0], [11.0, 439.0], [12.0, 400.0], [13.0, 419.0], [14.0, 402.0], [15.0, 406.0], [16.0, 421.0], [17.0, 405.0], [18.0, 380.0], [19.0, 428.0], [20.0, 422.0], [21.0, 416.0], [22.0, 426.0], [23.0, 438.0], [24.0, 399.0], [25.0, 408.0], [26.0, 400.0], [27.0, 429.0], [28.0, 416.0], [29.0, 419.0], [30.0, 434.0], [31.0, 469.0], [33.0, 376.0], [32.0, 392.0], [35.0, 428.0], [34.0, 422.0], [37.0, 376.0], [36.0, 417.0], [39.0, 408.0], [38.0, 418.0], [41.0, 429.0], [40.0, 415.0], [43.0, 437.0], [42.0, 397.0], [45.0, 425.0], [44.0, 413.0], [47.0, 401.0], [46.0, 420.0], [49.0, 418.0], [48.0, 430.0], [51.0, 419.0], [50.0, 388.0], [53.0, 379.0], [52.0, 395.0], [55.0, 419.0], [54.0, 419.0], [57.0, 418.0], [56.0, 432.0], [59.0, 409.0], [58.0, 390.0], [61.0, 441.0], [60.0, 421.0], [63.0, 418.0], [62.0, 427.0], [67.0, 409.0], [66.0, 430.0], [65.0, 414.0], [64.0, 429.0], [71.0, 437.0], [70.0, 404.0], [69.0, 434.0], [68.0, 410.0], [75.0, 401.0], [74.0, 408.0], [73.0, 394.0], [72.0, 403.0], [79.0, 404.0], [78.0, 417.0], [77.0, 398.0], [76.0, 390.0], [83.0, 287.0], [82.0, 427.7777777777777], [81.0, 411.3728549141963], [80.0, 366.30769230769226], [85.0, 290.0], [84.0, 367.5], [1.0, 435.0]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php", "isController": false}, {"data": [[77.02874999999989, 411.82999999999964]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php-Aggregated", "isController": false}, {"data": [[25.0, 343.4], [26.0, 437.0], [27.0, 511.0], [28.0, 389.0], [29.0, 445.0], [30.0, 361.0], [32.0, 299.0], [33.0, 459.0], [34.0, 352.0], [36.0, 415.0], [37.0, 354.5], [39.0, 356.5], [41.0, 410.0], [42.0, 449.0], [43.0, 413.0], [44.0, 354.5], [46.0, 355.5], [48.0, 498.0], [49.0, 499.0], [50.0, 307.0], [51.0, 365.5], [53.0, 483.0], [54.0, 468.0], [55.0, 366.0], [56.0, 398.0], [57.0, 393.0], [58.0, 517.0], [59.0, 303.0], [60.0, 278.0], [61.0, 384.0], [62.0, 408.5], [63.0, 451.5], [64.0, 352.0], [65.0, 426.5], [66.0, 353.0], [67.0, 346.0], [68.0, 365.0], [69.0, 353.5], [70.0, 438.0], [71.0, 386.6666666666667], [73.0, 400.5], [74.0, 390.6666666666667], [75.0, 402.0], [72.0, 405.0], [76.0, 388.5], [77.0, 423.5], [78.0, 346.0], [79.0, 391.1666666666667], [81.0, 416.7448405253283], [82.0, 389.0], [83.0, 402.0], [80.0, 427.5142857142856], [84.0, 418.6666666666667]], "isOverall": false, "label": "https://blazedemo.com/reserve.php", "isController": false}, {"data": [[78.20250000000001, 415.9962500000002]], "isOverall": false, "label": "https://blazedemo.com/reserve.php-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 85.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 168.0, "minX": 1.74444636E12, "maxY": 65762.61666666667, "series": [{"data": [[1.74444648E12, 65506.916666666664], [1.74444666E12, 48638.78333333333], [1.74444636E12, 10625.933333333332], [1.74444654E12, 65762.61666666667], [1.74444642E12, 58196.38333333333], [1.74444672E12, 867.2], [1.7444466E12, 65411.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74444648E12, 10542.533333333333], [1.74444666E12, 7946.9], [1.74444636E12, 2642.95], [1.74444654E12, 10590.8], [1.74444642E12, 10371.616666666667], [1.74444672E12, 168.0], [1.7444466E12, 10523.866666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74444672E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 379.63043478260875, "minX": 1.74444636E12, "maxY": 1775.3250000000005, "series": [{"data": [[1.74444648E12, 519.289308176101], [1.74444666E12, 520.5000000000001], [1.74444636E12, 577.4571428571426], [1.74444654E12, 516.9192546583848], [1.74444642E12, 517.0807453416152], [1.7444466E12, 521.1761006289305]], "isOverall": false, "label": "https://blazedemo.com/", "isController": false}, {"data": [[1.74444648E12, 413.58124999999995], [1.74444666E12, 414.72173913043474], [1.74444636E12, 379.63043478260875], [1.74444654E12, 411.10624999999993], [1.74444642E12, 412.73584905660385], [1.7444466E12, 417.3687500000002]], "isOverall": false, "label": "https://blazedemo.com/purchase.php", "isController": false}, {"data": [[1.74444648E12, 1767.4624999999994], [1.74444666E12, 1767.0645161290317], [1.74444636E12, 1748.5522388059708], [1.74444654E12, 1756.0875], [1.74444642E12, 1760.2249999999997], [1.7444466E12, 1775.3250000000005]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.74444648E12, 416.2562500000001], [1.74444666E12, 414.24375], [1.74444654E12, 412.77639751552795], [1.74444642E12, 401.2781456953643], [1.74444672E12, 423.1111111111111], [1.7444466E12, 413.37106918239]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php", "isController": false}, {"data": [[1.74444648E12, 417.9937500000001], [1.74444666E12, 418.5462962962962], [1.74444636E12, 382.1320754716981], [1.74444654E12, 420.5125], [1.74444642E12, 414.35220125786157], [1.7444466E12, 420.61249999999995]], "isOverall": false, "label": "https://blazedemo.com/reserve.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74444672E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 373.811320754717, "minX": 1.74444636E12, "maxY": 1751.3000000000006, "series": [{"data": [[1.74444648E12, 516.2704402515724], [1.74444666E12, 517.5333333333333], [1.74444636E12, 575.1857142857145], [1.74444654E12, 513.8260869565223], [1.74444642E12, 514.1801242236027], [1.7444466E12, 518.245283018868]], "isOverall": false, "label": "https://blazedemo.com/", "isController": false}, {"data": [[1.74444648E12, 409.46875], [1.74444666E12, 410.53043478260867], [1.74444636E12, 376.26086956521726], [1.74444654E12, 406.66249999999997], [1.74444642E12, 408.77358490566036], [1.7444466E12, 412.98750000000007]], "isOverall": false, "label": "https://blazedemo.com/purchase.php", "isController": false}, {"data": [[1.74444648E12, 1743.2312499999998], [1.74444666E12, 1743.7526881720428], [1.74444636E12, 1732.5223880597018], [1.74444654E12, 1732.63125], [1.74444642E12, 1737.7250000000004], [1.7444466E12, 1751.3000000000006]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.74444648E12, 412.96875], [1.74444666E12, 410.9312500000001], [1.74444654E12, 408.98136645962717], [1.74444642E12, 398.15231788079467], [1.74444672E12, 420.1111111111111], [1.7444466E12, 410.11949685534586]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php", "isController": false}, {"data": [[1.74444648E12, 404.83124999999995], [1.74444666E12, 405.68518518518516], [1.74444636E12, 373.811320754717], [1.74444654E12, 407.91250000000014], [1.74444642E12, 402.72955974842773], [1.7444466E12, 407.11875000000003]], "isOverall": false, "label": "https://blazedemo.com/reserve.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74444672E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74444636E12, "maxY": 195.01492537313436, "series": [{"data": [[1.74444648E12, 115.08176100628931], [1.74444666E12, 113.07777777777774], [1.74444636E12, 191.61428571428573], [1.74444654E12, 112.19875776397511], [1.74444642E12, 117.32919254658384], [1.7444466E12, 114.05031446540886]], "isOverall": false, "label": "https://blazedemo.com/", "isController": false}, {"data": [[1.74444648E12, 0.0], [1.74444666E12, 0.0], [1.74444636E12, 0.0], [1.74444654E12, 0.0], [1.74444642E12, 0.0], [1.7444466E12, 0.0]], "isOverall": false, "label": "https://blazedemo.com/purchase.php", "isController": false}, {"data": [[1.74444648E12, 115.22500000000002], [1.74444666E12, 113.1720430107527], [1.74444636E12, 195.01492537313436], [1.74444654E12, 112.13750000000003], [1.74444642E12, 117.34374999999999], [1.7444466E12, 113.94999999999997]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.74444648E12, 0.0], [1.74444666E12, 0.0], [1.74444654E12, 0.0], [1.74444642E12, 0.0], [1.74444672E12, 0.0], [1.7444466E12, 0.0]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php", "isController": false}, {"data": [[1.74444648E12, 0.0], [1.74444666E12, 0.0], [1.74444636E12, 0.0], [1.74444654E12, 0.0], [1.74444642E12, 0.0], [1.7444466E12, 0.0]], "isOverall": false, "label": "https://blazedemo.com/reserve.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74444672E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 339.0, "minX": 1.74444636E12, "maxY": 2088.0, "series": [{"data": [[1.74444648E12, 852.0], [1.74444666E12, 611.0], [1.74444636E12, 2088.0], [1.74444654E12, 1342.0], [1.74444642E12, 1254.0], [1.74444672E12, 469.0], [1.7444466E12, 639.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74444648E12, 523.0], [1.74444666E12, 519.6], [1.74444636E12, 595.7], [1.74444654E12, 522.0], [1.74444642E12, 533.0], [1.74444672E12, 469.0], [1.7444466E12, 528.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74444648E12, 577.8000000000005], [1.74444666E12, 560.0], [1.74444636E12, 2087.94], [1.74444654E12, 575.5600000000004], [1.74444642E12, 606.5700000000012], [1.74444672E12, 469.0], [1.7444466E12, 561.44]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74444648E12, 538.0], [1.74444666E12, 534.0], [1.74444636E12, 613.0], [1.74444654E12, 532.0], [1.74444642E12, 543.0], [1.74444672E12, 469.0], [1.7444466E12, 541.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74444648E12, 339.0], [1.74444666E12, 357.0], [1.74444636E12, 366.0], [1.74444654E12, 345.0], [1.74444642E12, 355.0], [1.74444672E12, 398.0], [1.7444466E12, 353.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74444648E12, 422.0], [1.74444666E12, 422.0], [1.74444636E12, 477.0], [1.74444654E12, 419.5], [1.74444642E12, 428.0], [1.74444672E12, 416.0], [1.7444466E12, 423.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74444672E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 284.0, "minX": 1.0, "maxY": 435.0, "series": [{"data": [[2.0, 422.0], [8.0, 428.0], [1.0, 435.0], [9.0, 425.0], [10.0, 426.0], [5.0, 421.0], [11.0, 422.0], [3.0, 416.5], [6.0, 419.0], [12.0, 421.0], [13.0, 434.0], [7.0, 432.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 405.0], [8.0, 287.0], [9.0, 289.0], [10.0, 295.0], [5.0, 394.0], [11.0, 287.0], [3.0, 407.0], [6.0, 284.0], [12.0, 286.0], [13.0, 300.0], [7.0, 306.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 284.0, "minX": 1.0, "maxY": 432.0, "series": [{"data": [[2.0, 419.0], [8.0, 419.5], [1.0, 432.0], [9.0, 418.0], [10.0, 417.0], [5.0, 418.0], [11.0, 415.0], [3.0, 413.5], [6.0, 415.0], [12.0, 414.0], [13.0, 428.0], [7.0, 427.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 405.0], [8.0, 287.0], [9.0, 289.0], [10.0, 295.0], [5.0, 394.0], [11.0, 286.0], [3.0, 407.0], [6.0, 284.0], [12.0, 286.0], [13.0, 300.0], [7.0, 306.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.74444636E12, "maxY": 10.683333333333334, "series": [{"data": [[1.74444648E12, 10.683333333333334], [1.74444666E12, 7.816666666666666], [1.74444636E12, 2.8666666666666667], [1.74444654E12, 10.65], [1.74444642E12, 10.533333333333333], [1.74444672E12, 0.13333333333333333], [1.7444466E12, 10.65]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74444672E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.74444636E12, "maxY": 10.7, "series": [{"data": [[1.74444648E12, 10.65], [1.74444666E12, 7.883333333333334], [1.74444636E12, 1.7], [1.74444654E12, 10.7], [1.74444642E12, 9.433333333333334], [1.74444672E12, 0.15], [1.7444466E12, 10.633333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.74444636E12, 1.1166666666666667], [1.74444642E12, 1.0666666666666667]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74444672E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.74444636E12, "maxY": 2.683333333333333, "series": [{"data": [[1.74444642E12, 0.3333333333333333]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php-failure", "isController": false}, {"data": [[1.74444648E12, 2.6666666666666665], [1.74444666E12, 2.6666666666666665], [1.74444654E12, 2.683333333333333], [1.74444642E12, 2.183333333333333], [1.74444672E12, 0.15], [1.7444466E12, 2.65]], "isOverall": false, "label": "https://blazedemo.com/confirmation.php-success", "isController": false}, {"data": [[1.74444648E12, 2.65], [1.74444666E12, 1.5], [1.74444636E12, 0.7], [1.74444654E12, 2.683333333333333], [1.74444642E12, 2.45], [1.7444466E12, 2.65]], "isOverall": false, "label": "https://blazedemo.com/-success", "isController": false}, {"data": [[1.74444636E12, 0.4666666666666667], [1.74444642E12, 0.23333333333333334]], "isOverall": false, "label": "https://blazedemo.com/-failure", "isController": false}, {"data": [[1.74444648E12, 2.6666666666666665], [1.74444666E12, 1.55], [1.74444636E12, 0.21666666666666667], [1.74444654E12, 2.6666666666666665], [1.74444642E12, 2.15], [1.7444466E12, 2.6666666666666665]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.74444648E12, 2.6666666666666665], [1.74444666E12, 1.8], [1.74444636E12, 0.55], [1.74444654E12, 2.6666666666666665], [1.74444642E12, 2.3333333333333335], [1.7444466E12, 2.6666666666666665]], "isOverall": false, "label": "https://blazedemo.com/reserve.php-success", "isController": false}, {"data": [[1.74444636E12, 0.31666666666666665], [1.74444642E12, 0.18333333333333332]], "isOverall": false, "label": "https://blazedemo.com/purchase.php-failure", "isController": false}, {"data": [[1.74444648E12, 2.6666666666666665], [1.74444666E12, 1.9166666666666667], [1.74444636E12, 0.45], [1.74444654E12, 2.6666666666666665], [1.74444642E12, 2.466666666666667], [1.7444466E12, 2.6666666666666665]], "isOverall": false, "label": "https://blazedemo.com/purchase.php-success", "isController": false}, {"data": [[1.74444636E12, 0.9], [1.74444642E12, 0.5166666666666667]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.74444636E12, 0.3333333333333333], [1.74444642E12, 0.31666666666666665]], "isOverall": false, "label": "https://blazedemo.com/reserve.php-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74444672E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.74444636E12, "maxY": 13.366666666666667, "series": [{"data": [[1.74444648E12, 13.316666666666666], [1.74444666E12, 9.433333333333334], [1.74444636E12, 1.9166666666666667], [1.74444654E12, 13.366666666666667], [1.74444642E12, 11.583333333333334], [1.74444672E12, 0.15], [1.7444466E12, 13.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74444636E12, 2.0166666666666666], [1.74444642E12, 1.5833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74444672E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

